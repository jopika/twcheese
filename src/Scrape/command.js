import {Command} from '../../src/Models/Command.js';
import {parseArrival} from '../../src/Scrape/time.js';
import {scrapeResources} from '../../src/Scrape/res.js';

/**
 *  scrapes a command page for the command info and returns it as a Command object
 *  @param  {HTMLDocument} gameDoc  the page generated by game.php?screen=command_info&id=x&type=own
 *  @return {Command}
 */
function scrapeCommand(gameDoc) {
  var command = new Command();

  var content = $(gameDoc).find('#content_value').get()[0];
  let tables = content.getElementsByTagName('table');
  let rowMap = mapFirstTable(tables);

  command.arrival = parseArrival($(rowMap.arrival.cells[1]).text(), window.game_data.market);

  if (tables.length < 3) {
    return command;
  }

  let resCell = tables[2].rows[0].cells[1];
  command.haul = scrapeResources(resCell);

  var haulText = resCell.innerHTML;
  if (haulText.search('\\|') !== -1) {
    haulText = haulText.substring(haulText.search('\\|') + 7);
    let performance = haulText.split('/');
    command.haulCapacity = parseInt(performance[1]);
  }

  return command;
};


function mapFirstTable(tables) {
  let table = tables[0];
  let headerRows = 1;
  let originRows = table.rows[headerRows].cells[0].rowSpan;
  let destRows = table.rows[headerRows + originRows].cells[0].rowSpan;

  let rowMap = {};
  rowMap.originPlayer = table.rows[headerRows];
  rowMap.originVillage = table.rows[headerRows + 1];
  rowMap.destPlayer = table.rows[headerRows + originRows];
  rowMap.destVillage = table.rows[headerRows + originRows + 1];

  if (destRows > 2) {
    rowMap.catapultTarget = table.rows[headerRows + originRows + 2];
  }

  rowMap.duration = table.rows[headerRows + originRows + destRows];
  rowMap.arrival = table.rows[headerRows + originRows + destRows + 1];
  rowMap.arrivalIn = table.rows[headerRows + originRows + destRows + 2];
  rowMap.estimatedReturn = table.rows[headerRows + originRows + destRows + 3];

  return rowMap;
}


function scrapeCommandUrlFromRow(row) {
  let firstCell = row.cells[0];
  let links = firstCell.getElementsByTagName('a');
  if (links.length < 1) {
    let err = new Error('failed to find command link');
    err.extra = {rowHtml: row.outerHTML};
    throw err;
  }
  return links[0].href;
}


export {scrapeCommand, scrapeCommandUrlFromRow}
