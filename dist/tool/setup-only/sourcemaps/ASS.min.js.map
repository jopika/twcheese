{"version":3,"sources":["ASS.js"],"names":["modules","installedModules","__webpack_require__","moduleId","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","DebugEvents","PHASE_COMPLETION_READY","PHASE_COMPLETION_NOT_READY","PHASE_CHANGED","QUESTION_ANSWERED","QUESTION_NOT_ANSWERED","OPTION_VALUE_CHANGED","BUG_REPORT_SUCCEEDED","BUG_REPORT_FAILED","USER_REJECTED","Phase","[object Object]","phaseName","this","followsUpOn","autoComplete","thingToFollowUpOn","auto","Error","PhaseTypes","ATTEMPT","QUESTION","REPORT","ProcessFactory","_src_Models_Debug_DebugProcess_js__WEBPACK_IMPORTED_MODULE_0__","_src_Models_Debug_Build_PhaseFactory_js__WEBPACK_IMPORTED_MODULE_1__","_src_Models_Debug_BugReporter_js__WEBPACK_IMPORTED_MODULE_2__","_src_Models_Debug_PhaseReport_js__WEBPACK_IMPORTED_MODULE_3__","lazyEvalUsingParent","parentPhase","str","parentResult","result","eval","actions","phaseFactory","cfg","finishWithReport","process","phaseCfg","phases","enqueuePhase","createPhase","bugReporter","lazyEval","phase","addFollowUpPhasesForSuccess","addFollowUpPhasesForAnswers","type","success","subPhase","addSuccessFollowUp","q","questionCfg","entries","questions","optionCfg","options","followUp","option","addFollowUp","DebugProcess","_src_Models_Debug_DebugEvents_js__WEBPACK_IMPORTED_MODULE_0__","processName","currentPhaseIndex","push","watchPhase","splice","events","$","on","join","e","trigger","goToNextPhase","thing","getCurrentPhase","getThingsToFollowUpOn","followUpPhases","insertPhase","hasNextPhase","checkCompletionReady","start","length","slice","map","getSummary","PhaseReport","_src_Models_Debug_Phase_js__WEBPACK_IMPORTED_MODULE_0__","_src_Models_Debug_DebugEvents_js__WEBPACK_IMPORTED_MODULE_1__","_src_Models_Debug_PhaseTypes_js__WEBPACK_IMPORTED_MODULE_2__","Status","SUCCESS","FAIL","NOT_ATTEMPTED","super","status","error","report","buildReport","submitReport","then","url","html_url","catch","finally","PhaseAttempt_PhaseAttempt","asyncFunctionToAttempt","instructions","attempt","async","fail","_error","_result","summarizeData","ctrl","successFollowUpPhases","abortableAttempt","err","console","warn","Promise","resolve","reject","func","cb","setFollowsUpOn","doAttempt","data","summarizeError","message","extra","stack","phaseNum","functionToAttempt","PhaseQuestion_PhaseQuestion","_examinedHtml","html","examinedHtml","question","isAnswered","reduce","acc","concat","QuestionTypes","VALUE","FREE_FORM","SELECT","Question_Question","text","selectedOptionIndex","index","getSelectedOption","answer","QuestionSelect_QuestionSelect","Option_Option","humanText","className","QuestionFreeForm_QuestionFreeForm","questionText","placeholderText","minResponseLength","setSelectedOption","watchSelectedOption","Correctness","CORRECT","INCORRECT","NOT_SURE","OPTION_INCORRECT","QuestionValue_QuestionValue","valueQuestioned","_valueQuestioned","assign","valueChecked","QuestionFactory_QuestionFactory","createQuestionFreeForm","createQuestionSelect","createQuestionValue","ask","addOption","valueExamined","examine","PhaseFactory_PhaseFactory","questionFactory","createPhaseAttempt","createPhaseQuestion","createPhaseReport","action","internalName","execute","summarizeResult","setDataSummarizer","setInstructions","lookAt","addQuestion","DataCollector","debugProcess","censoredProps","Set","scrub","buildData","nav","window","navigator","getSummarySoFar","contentHtml","document","getElementById","outerHTML","appCodeName","app","appName","appVersion","platfrom","userAgent","languages","extend","oscpu","gameData","game_data","keys","has","censorCsrfInString","replace","API","bugReport","BugReporter_BugReporter","title","dataCollected","getCollectibleData","majorVersion","world","player","TwCheese","version","JSON","stringify","createIssue","response","fetch","method","body","ok","statusText","json","Config_Config","id","props","_loadCachedData","prop","defaultValue","propPath","tokens","split","token","getProp","setProp","_save","saved","localStorage","getItem","parse","_beforeSave","setItem","_getCacheableData","throttle","maxBurstsPerSecond","recentRequests","Array","unshift","performance","now","pop","anchorTimestamp","delayMs","setTimeout","originalFetch","requestWasMade","apply","arguments","RemoteConfig_RemoteConfig","seconds","ttl","needsUpdate","update","Date","getTime","timeUpdated","xmlDoc","sleepIfNeeded","responseText","DOMParser","parseFromString","requestXml","_processXml","parseXmlNode","node","children","parseFloat","innerHTML","childNode","tagName","config","userConfig","gameConfig","setUrl","domain","setTtl","buildingConfig","troopConfig","game","image_base","ImageSrc_self","ROOT","ImageSrc","plus","minus","wood","stone","iron","attack","haulPartial","haulFull","info","attackSentViaFa","attackSizeSmall","attackSizeMedium","attackSizeLarge","attackContainsSnob","attackContainsSpy","attackContainsKnight","popupBackground","popupBorder","servant","loadingSpinner","calendar","sidebarMain","sidebarBug","sidebarGithub","jq","blue","black","darkGrey","grey","red","legacy","helpBackground","helpBackgroundBright","buildingIcon","buildingType","troopIcon","troopType","dotIcon","color","scavengeOption","optionId","cssInitd","initCss","css","appendTo","add","skipKey","skippableId","ScavengeOption","base","loot_factor","squadCapacity","getLootPercent","preDuration","Math","pow","duration_exponent","duration_initial_seconds","round","duration_factor","durationSeconds","sqrt","Troops_troopTypes","travelMinutes","troop","speed","troopCarry","carry","TroopCounts","allowedTroopTypes","counts","includes","count","values","sum","doSomething","capacity","troopPop","distance","role","calcTravelDuration","travelMinutesPerField","knight","relevantMinutes","filter","max","subtrahend","difference","troopCounts","array","troops","forEach","minutesPerField","Troops_troopUtil","troopTypesOnWorld","units","existsOnWorld","resourceAmount","haulBonus","troopCount","carryCapacity","factor","travelDuration","scrapeScavengeModels","gameDoc","jsCode","scripts","getElementsByTagName","script","code","findScavengeScreenJsCode","dataFromParams","paramCode","troopsCode","optionsConfigStartIndex","indexOf","optionsConfigCode","wrappedCode","troopsStartIndex","optionsConfig","parseScavengeScreenParamCode","startIndex","findScavengeScreenParamCode","villageCode","findVillageCode","village","scrapeScavengeData","optionBases","Map","set","parseInt","sendableTroopTypes","haulFactor","unit_carry_factor","string","firstParenIndex","openingChar","closingChar","openingParens","closingParens","lastParenIndex","char","substring","ScavengeTroopsAssignerPreferences_ScavengeTroopsAssignerPreferences","_sendableTroopTypes","reset","MODE_SANE_PERSON","allowedOptionIds","targetDurationSeconds","initTroops","troopOrder","maySend","reserved","isAllowed","delete","exported","MODE_ADDICT","ScavengeTroopsAssigner_ScavengeTroopsAssigner","troopUtil","preferences","availableTroopCounts","getAllowedTroopTypes","subtract","getReservedTroopCounts","zeroNegatives","usableOptionIds","isOptionAllowed","adjustAvailableTroopCounts","populationUsed","adjustUsableOptionIds","assignTroopsForAddict","assignTroopsForSanePerson","assignedCountsByOption","optionIds","reverse","assignedCounts","targetCapacity","calcTargetCapacity","chunkTroopsToHaul","availableCapacity","targetCapacitySum","inverseLootFactors","inverseLootFactorSum","getLootFactor","portionAvailableTroopsOverall","min","assignedTroopCounts","capacities","chunk","chunkRatio","floor","troopsToTopOff","each","troopTypes","extraCounts","unassignedExists","closestType","smallestDiff","Number","MAX_SAFE_INTEGER","diff","abs","AbstractWidget","el","_beforeInsert","before","$el","after","append","afterInsert","callback","observer","MutationObserver","mutations","outerloop","mutation","addedNodes","contains","disconnect","observe","attributes","childList","subtree","afterDOMInsert","ScavengePreferencesWidget_ScavengePreferencesWidget","scavengeOptions","initStructure","initTroopOrder","watchSelf","createHtml","trim","$targetDuration","find","$options","$modes","$troopsAllowed","$troopsReserved","$troopGroups","createTimingSectionHtml","createOptionsSectionHtml","createTroopsSectionHtml","createTroopsOrderSectionHtml","overallSeconds","hours","minutes","String","padStart","modeSane","modeAddict","createOptionRowHtml","checked","getName","helpTooltip","createTroopRowHtml","isTroopTypeAllowed","reservedCount","getReservedCount","$group","eq","$troopType","$draggingTroop","preventDefault","addClass","removeClass","updateTroopOrderPreferences","dt","originalEvent","dataTransfer","setDragImage","clone","dropEffect","order","determineTroopOrder","setTroopOrder","chunks","$troops","prefs","checkValidity","match","setCustomValidity","setTargetDuration","$option","setOptionAllowed","val","setMode","$this","setTroopAllowed","setReservedCount","dataset","ASS_haulFactor","troopsAssigner","processCfg","initialized","prepareBestOption","informUserOfIssues","usableIds","scrapeUsableOptionIds","UI","ErrorMessage","availableTroops","availableCounts","unit","scrapeAvailableTroopCounts","areTroopsSufficient","assignedTroopsByOption","assignTroops","focus","focusStartButton","processFactory","registerTool","use","here","location","href","atScavengeScreen","screen","screenName","uriParams","InfoMessage","TribalWars","redirect","buttonConfirm","skipNextTime","confirm","ConfirmationBox","buildContent","suggestRedirect","all","ensureUpdated","ensureRemoteConfigsUpdated","models","exportedPreferences","import","export","$launcher","fontSize","marginLeft","onClose","Dialog","show","$container","widget","openPreferencesPopup","insertPreferencesLauncher","$narcissism","float","fontWeight","insertNarcissism","didScavengingStart","is","afterScavengingStarted","init","getDebugProcess"],"mappings":"CAAS,SAAUA,GAET,IAAIC,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAJ,EAAQG,GAAUK,KAAKH,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBO,EAAIT,EAGxBE,EAAoBQ,EAAIT,EAGxBC,EAAoBS,EAAI,SAASP,EAASQ,EAAMC,GAC3CX,EAAoBY,EAAEV,EAASQ,IAClCG,OAAOC,eAAeZ,EAASQ,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEX,EAAoBiB,EAAI,SAASf,GACX,oBAAXgB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeZ,EAASgB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeZ,EAAS,aAAc,CAAEkB,OAAO,KAQvDpB,EAAoBqB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQpB,EAAoBoB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFAzB,EAAoBiB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOpB,EAAoBS,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRxB,EAAoB4B,EAAI,SAASzB,GAChC,IAAIQ,EAASR,GAAUA,EAAOoB,WAC7B,WAAwB,OAAOpB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBS,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRX,EAAoBY,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG9B,EAAoBiC,EAAI,GAIjBjC,EAAoBA,EAAoBkC,EAAI,GAnFpD,CAsFC,CAEJ,SAAU/B,EAAQgC,EAAqBnC,GAE7C,aAC+BA,EAAoBS,EAAE0B,EAAqB,IAAK,WAAa,OAAOC,IACnG,MAAMA,EAAc,CAClBC,uBAAwB,yBACxBC,2BAA4B,6BAC5BC,cAAe,gBACfC,kBAAmB,oBACnBC,sBAAuB,wBACvBC,qBAAsB,uBACtBC,qBAAsB,uBACtBC,kBAAmB,oBACnBC,cAAe,kBAQX,SAAU1C,EAAQgC,EAAqBnC,GAE7C,aAC+BA,EAAoBS,EAAE0B,EAAqB,IAAK,WAAa,OAAOW,IACnG,MAAMA,EACJC,YAAYC,GACVC,KAAKvC,KAAOsC,EACZC,KAAKC,YAAc,KACnBD,KAAKE,cAAe,EAGtBJ,eAAeK,GAEb,OADAH,KAAKC,YAAcE,EACZH,KAGTF,gBAAgBM,GAEd,OADAJ,KAAKE,aAAeE,EACbJ,KAGTF,UACE,MAAMO,MAAM,kBAGdP,QACE,MAAMO,MAAM,mBAGdP,uBACE,MAAMO,MAAM,mBAGdP,wBACE,MAAMO,MAAM,mBAGdP,aACE,MAAMO,MAAM,sBAUV,SAAUnD,EAAQgC,EAAqBnC,GAE7C,aAC+BA,EAAoBS,EAAE0B,EAAqB,IAAK,WAAa,OAAOoB,IACnG,MAAMA,EAAa,CACjBC,QAAS,UACTC,SAAU,WACVC,OAAQ,WAQJ,SAAUvD,OAAQgC,oBAAqBnC,qBAE7C,aAC+BA,oBAAoBS,EAAE0B,oBAAqB,IAAK,WAAa,OAAOwB,iBAC9E,IAAIC,+DAAiE5D,oBAAoB,GACrF6D,qEAAuE7D,oBAAoB,GAC3F8D,8DAAgE9D,oBAAoB,GACpF+D,8DAAgE/D,oBAAoB,GAO7G,SAASgE,oBAAoBC,aAC3B,OAAQC,KACC,KACL,IAAIC,aAAeF,YAAYG,OAC/B,OAAOC,KAAKH,MAMlB,MAAMP,eAEJZ,YAAYuB,GACVrB,KAAKsB,aAAe,IAAIV,qEAA2F,EAAES,GAGvHvB,OAAOrC,EAAM8D,EAAKC,GAChB,IAAIC,EAAU,IAAId,+DAAqF,EAAElD,GAEzG,IAAK,IAAIiE,KAAYH,EAAII,OACvBF,EAAQG,aAAa5B,KAAK6B,YAAYH,IAGxC,GAAIF,EAAkB,CACpB,IAAIM,EAAc,IAAIjB,8DAAmF,EAAEY,GAC3GA,EAAQG,aAAad,8DAAmF,EAAEtC,OAAOsD,IAGnH,OAAOL,EAGT3B,YAAYyB,EAAKQ,GACf,IAAIC,EAAQhC,KAAKsB,aAAa9C,OAAO+C,EAAKQ,GAG1C,OAFA/B,KAAKiC,4BAA4BD,EAAOT,GACxCvB,KAAKkC,4BAA4BF,EAAOT,GACjCS,EAGTlC,4BAA4BkC,EAAOT,GACjC,GAAiB,iBAAbA,EAAIY,MAA2BZ,EAAIa,QACrC,IAAK,IAAIV,KAAYH,EAAIa,QAAS,CAChC,IAAIC,EAAWrC,KAAK6B,YAAYH,EAAUX,oBAAoBiB,IAC9DA,EAAMM,mBAAmBD,IAK/BvC,4BAA4BkC,EAAOT,GACjC,GAAiB,kBAAbA,EAAIY,KAIR,IAAK,IAAKI,EAAGC,KAAgB5E,OAAO6E,QAAQlB,EAAImB,WAC9C,GAAyB,mBAArBF,EAAYL,KAGhB,IAAK,IAAKxE,EAAGgF,KAAc/E,OAAO6E,QAAQD,EAAYI,SACpD,GAAID,EAAUE,SACZ,IAAK,IAAInB,KAAYiB,EAAUE,SAAU,CACvC,IAAIC,EAASd,EAAMU,UAAUH,GAAGK,QAAQjF,GACpC0E,EAAWrC,KAAK6B,YAAYH,EAAUX,oBAAoBiB,IAC9Dc,EAAOC,YAAYV,OAczB,SAAUnF,EAAQgC,EAAqBnC,GAE7C,aAC+BA,EAAoBS,EAAE0B,EAAqB,IAAK,WAAa,OAAO8D,IAC9E,IAAIC,EAAgElG,EAAoB,GAI7G,MAAMiG,EACJlD,YAAYoD,GACVlD,KAAKvC,KAAOyF,EACZlD,KAAK2B,OAAS,GACd3B,KAAKmD,mBAAqB,EAG5BrD,aAAakC,GAGX,OAFAhC,KAAK2B,OAAOyB,KAAKpB,GACjBhC,KAAKqD,WAAWrB,GACThC,KAGTF,YAAYkC,GAGV,OAFAhC,KAAK2B,OAAO2B,OAAOtD,KAAKmD,kBAAoB,EAAG,EAAGnB,GAClDhC,KAAKqD,WAAWrB,GACThC,KAGTF,WAAWkC,GACT,IAAIuB,EAAS,CACXN,EAAmF,EAAE7D,uBACrF6D,EAAmF,EAAE5D,2BACrF4D,EAAmF,EAAE3D,eAGvFkE,EAAExB,GAAOyB,GAAGF,EAAOG,KAAK,KAAOC,GAAMH,EAAExD,MAAM4D,QAAQD,EAAExB,KAAMwB,IAE7DH,EAAExB,GAAOyB,GAAGR,EAAmF,EAAE7D,uBAAwB,KACnH4C,EAAM9B,cACRF,KAAK6D,kBAKX/D,QACEE,KAAKmD,mBAAqB,EAC1BnD,KAAK6D,gBAGP/D,gBACE,GAAIE,KAAKmD,mBAAqB,EAC5B,IAAK,IAAIW,KAAS9D,KAAK+D,kBAAkBC,wBACvC,IAAK,IAAIhC,KAAS8B,EAAMG,eACtBjE,KAAKkE,YAAYlC,GAIvB,IAAKhC,KAAKmE,eACR,MAAM9D,MAAM,yBAEdL,KAAKmD,oBACLK,EAAExD,MAAM4D,QAAQX,EAAmF,EAAE3D,eACrGU,KAAK+D,kBAAkBK,uBACvBpE,KAAK+D,kBAAkBM,QAGzBvE,eACE,OAAOE,KAAKmD,kBAAoBnD,KAAK2B,OAAO2C,OAAS,EAGvDxE,kBACE,OAAOE,KAAK2B,OAAO3B,KAAKmD,mBAG1BrD,kBAEE,OAAOE,KAAK2B,OAAO4C,MAAM,EAAGvE,KAAKmD,mBAC9BqB,IAAIxC,GAASA,EAAMyC,cAGxB3E,cAAcoD,GACZ,OAAO,IAAIF,EAAaE,MAUtB,SAAUhG,EAAQgC,EAAqBnC,GAE7C,aAC+BA,EAAoBS,EAAE0B,EAAqB,IAAK,WAAa,OAAOwF,IAC9E,IAAIC,EAA0D5H,EAAoB,GAC9E6H,EAAgE7H,EAAoB,GACpF8H,EAA+D9H,EAAoB,GAM5G,MAAM+H,EAAS,CACbC,QAAS,UACTC,KAAM,OACNC,cAAe,iBAIjB,MAAMP,UAAoBC,EAAuE,EAC/F7E,YAAYgC,GACVoD,MAAM,mBACNlF,KAAK8B,YAAcA,EACnB9B,KAAKmF,OAASL,EAAOG,cACrBjF,KAAKoF,MAGPtF,UACE,OAAO+E,EAAiF,EAAEpE,OAG5FX,QACE,IAAIuF,EAASrF,KAAK8B,YAAYwD,cAC9BtF,KAAK8B,YAAYyD,aAAaF,GAC3BG,KAAKhI,IACJwC,KAAKmF,OAASL,EAAOC,QACrBvB,EAAExD,MAAM4D,QAAQ,CACdzB,KAAMyC,EAAmF,EAAElF,qBAC3F+F,IAAKjI,EAAEkI,aAGVC,MAAMP,IACLpF,KAAKoF,MAAQA,EACbpF,KAAKmF,OAASL,EAAOE,KACrBxB,EAAExD,MAAM4D,QAAQgB,EAAmF,EAAEjF,qBAEtGiG,QAAQ,IAAM5F,KAAKoE,wBAGxBtE,uBACME,KAAKmF,SAAWL,EAAOG,cACzBzB,EAAExD,MAAM4D,QAAQgB,EAAmF,EAAExF,wBAErGoE,EAAExD,MAAM4D,QAAQgB,EAAmF,EAAEvF,4BAIzGS,wBACE,MAAO,GAGTA,aACE,MAAO,CACLC,UAAWC,KAAKvC,MAIpBqC,cAAcgC,GACZ,OAAO,IAAI4C,EAAY5C,MAUrB,SAAU5E,EAAQgC,EAAqBnC,GAE7C,aAGA,IAAI8C,EAAQ9C,EAAoB,GAG5BoC,EAAcpC,EAAoB,GAGlCuD,EAAavD,EAAoB,GAOrC,MAAM+H,EAAS,CACbC,QAAS,UACTC,KAAM,OACNC,cAAe,iBAIjB,MAAMY,UAAkChG,EAAqB,EAC3DC,YAAYC,EAAW+F,GACrBZ,MAAMnF,GACNC,KAAK+F,aACL/F,KAAKgG,QAAUF,EACf9F,KAAKoC,QAAU6D,cAEfjG,KAAKkG,KAAOD,cAEZjG,KAAKmF,OAASL,EAAOG,cACrBjF,KAAKE,cAAe,EACpBF,KAAKmG,OACLnG,KAAKoG,QACLpG,KAAKqG,cAAgB7I,CAAAA,GAAKA,GAC1BwC,KAAKsG,KAAO,GAEZtG,KAAKuG,sBAAwB,GAG/BzG,UACE,OAAOQ,EAA+B,EAAEC,QAG1CY,aACE,GAAInB,KAAKmF,SAAWL,EAAOG,cACzB,MAAM,IAAI5E,MAAM,kDAElB,GAAIL,KAAKmF,SAAWL,EAAOE,KACzB,MAAM,IAAI3E,MAAM,iDAElB,OAAOL,KAAKoG,QAGdtG,kBACE,IACE,IAAIqB,QAAenB,KAAKwG,mBACxBxG,KAAKmF,OAASL,EAAOC,QACrB/E,KAAKoG,QAAUjF,QACTnB,KAAKoC,QAAQjB,GACnB,MAAOsF,GACPC,QAAQC,KAAKF,GACbzG,KAAKmF,OAASL,EAAOE,KACrBhF,KAAKmG,OAASM,QACRzG,KAAKkG,KAAKO,GAElBzG,KAAKoE,uBAGPtE,yBACE,OAAO,IAAI8G,QAAQX,MAAOY,EAASC,KACjCtD,EAAExD,KAAKsG,MAAM7C,GAAGtE,EAAiC,EAAES,cAAe,IAAMkH,EAAO,kBAC/E,IACE,IAAI5F,EACAlB,KAAKC,cACPiB,EAAelB,KAAKC,YAAYkB,QAGlC0F,QADmB7G,KAAKgG,QAAQ9E,EAAclB,KAAKsG,OAEnD,MAAOG,GACPK,EAAOL,MAKb3G,YACE0D,EAAExD,KAAKsG,MAAM1C,QAAQzE,EAAiC,EAAES,eAG1DE,gBAAgBiG,GAEd,OADA/F,KAAK+F,aAAeA,EACb/F,KAGTF,kBAAkBiH,GAEhB,OADA/G,KAAKqG,cAAgBU,EACd/G,KAGTF,UAAUkH,GAER,OADAhH,KAAKoC,QAAU4E,EACRhH,KAGTF,mBAAmBkC,GAGjB,OAFAhC,KAAKuG,sBAAsBnD,KAAKpB,GAChCA,EAAMiF,eAAejH,MACdA,KAGTiE,qBACE,OAAIjE,KAAKmF,SAAWL,EAAOC,QAClB/E,KAAKuG,sBAEP,GAGTzG,OAAOkH,GAEL,OADAhH,KAAKkG,KAAOc,EACLhH,KAGTF,QACEE,KAAKkH,YAGPpH,uBACME,KAAKmF,SAAWL,EAAOG,cACzBzB,EAAExD,MAAM4D,QAAQzE,EAAiC,EAAEC,wBAEnDoE,EAAExD,MAAM4D,QAAQzE,EAAiC,EAAEE,4BAIvDS,wBACE,MAAO,CAACE,MAGVF,aACE,MAAO,CACLC,UAAWC,KAAKvC,KAChB0H,OAAQnF,KAAKmF,OACbgC,UAA8B,IAAjBnH,KAAKoG,QAA0BpG,KAAKoG,QAAUpG,KAAKqG,cAAcrG,KAAKoG,SACnFhB,MAAOpF,KAAKoH,kBAIhBtH,iBACE,IAAI2G,EAAMzG,KAAKmG,OACf,OAAMM,aAAepG,MAGd,CACLgH,QAASZ,EAAIY,QACb5J,KAAMgJ,EAAIhJ,KACV6J,MAAOb,EAAIa,MACXC,MAAOd,EAAIc,OANJd,EAUX3G,cAAc0H,EAAUC,GACtB,OAAO,IAAI5B,EAA0B2B,EAAUC,IAanD,MAAMC,UAAoC7H,EAAqB,EAC7DC,YAAYC,GACVmF,MAAMnF,GACNC,KAAK0C,UAAY,GACjB1C,KAAK2H,cAGP7H,UACE,OAAOQ,EAA+B,EAAEE,SAG1CV,OAAO8H,GAEL,OADA5H,KAAK2H,cAAgBC,EACd5H,KAGT6H,mBACE,MAAkC,mBAAvB7H,KAAK2H,cACP3H,KAAK2H,gBAEP3H,KAAK2H,cAGd7H,YAAYgI,GAQV,OAPA9H,KAAK0C,UAAUU,KAAK0E,GACpBtE,EAAEsE,GAAUrE,GAAGtE,EAAiC,EAAEI,kBAAmB,KACnES,KAAKoE,yBAEPZ,EAAEsE,GAAUrE,GAAGtE,EAAiC,EAAEK,sBAAuB,KACvEQ,KAAKoE,yBAEApE,KAGTF,SAIAA,uBACE,IAAK,IAAIgI,KAAY9H,KAAK0C,UACxB,IAAKoF,EAASC,aAEZ,YADAvE,EAAExD,MAAM4D,QAAQzE,EAAiC,EAAEE,4BAIvDmE,EAAExD,MAAM4D,QAAQzE,EAAiC,EAAEC,wBAGrDU,wBACE,OAAOE,KAAK0C,UAAUsF,OAAO,CAACC,EAAKH,IAAaG,EAAIC,OAAOJ,EAAS9D,yBAA0B,IAGhGlE,aACE,MAAO,CACLC,UAAWC,KAAKvC,KAChBiF,UAAW1C,KAAK0C,UAAU8B,IAAIsD,GAAYA,EAASrD,eAIvD3E,cAAcC,GACZ,OAAO,IAAI2H,EAA4B3H,IAS3C,MAAMoI,EAAgB,CACpBC,MAAO,QACPC,UAAW,YACXC,OAAQ,UASV,MAAMC,EACJzI,YAAY0I,GACVxI,KAAKwI,KAAOA,EACZxI,KAAK4C,QAAU,GACf5C,KAAKyI,oBAAsB,KAG7B3I,UACE,MAAMO,MAAM,mBAGdP,UAAUgD,GAER,OADA9C,KAAK4C,QAAQQ,KAAKN,GACX9C,KAGTF,kBAAkB4I,GAGhB,OAFA1I,KAAKyI,oBAAsBC,EAC3BlF,EAAExD,MAAM4D,QAAQzE,EAAiC,EAAEI,mBAC5CS,KAGTF,aACE,OAAoC,OAA7BE,KAAKyI,oBAGd3I,oBACE,OAAOE,KAAK4C,QAAQ5C,KAAKyI,qBAG3B3I,wBACE,IAAIgD,EAAS9C,KAAK2I,oBAClB,OAAQ7F,EAAOmB,eAAeK,OAAS,EAAK,CAACxB,GAAU,GAGzDhD,aACE,MAAO,CACLgI,SAAU9H,KAAKwI,KACfI,OAAQ5I,KAAK2I,oBAAoBxK,OAIrC2B,cAAc0I,GACZ,OAAO,IAAID,EAAkBC,IAWjC,MAAMK,UAAsCN,EAC1CzI,UACE,OAAOqI,EAAcG,OAGvBxI,cAAc0I,GACZ,OAAO,IAAIK,EAA8BL,IAU7C,MAAMM,EACJhJ,YAAYiJ,EAAW5K,EAAO6K,EAAY,IACxChJ,KAAKwI,KAAOO,EACZ/I,KAAK7B,MAAQA,EACb6B,KAAKgJ,UAAYA,EACjBhJ,KAAKiE,eAAiB,GAGxBnE,YAAYkC,GAGV,OAFAhC,KAAKiE,eAAeb,KAAKpB,GACzBA,EAAMiF,eAAejH,MACdA,KAGTF,SAAS3B,GACP6B,KAAK7B,MAAQA,EACbqF,EAAExD,MAAM4D,QAAQzE,EAAiC,EAAEM,sBAGrDK,cAAciJ,EAAW5K,EAAO6K,GAC9B,OAAO,IAAIF,EAAcC,EAAW5K,EAAO6K,IAc/C,MAAMC,UAA0CV,EAE9CzI,YAAYoJ,EAAcC,EAAiBC,EAAoB,GAC7DlE,MAAMgE,GACNlJ,KAAKoJ,kBAAoBA,EACzBpJ,KAAK4C,QAAU,CACbkG,EAActK,OAAO2K,EAAiB,GAAI,cAE5CnJ,KAAKqJ,kBAAkB,GACvBrJ,KAAKsJ,sBAGPxJ,UACE,OAAOqI,EAAcE,UAGvBvI,sBACE0D,EAAExD,KAAK2I,qBAAqBlF,GAAGtE,EAAiC,EAAEM,qBAAsB,KAClFO,KAAK+H,aACPvE,EAAExD,MAAM4D,QAAQzE,EAAiC,EAAEI,mBAEnDiE,EAAExD,MAAM4D,QAAQzE,EAAiC,EAAEK,yBAKzDM,aACE,OAAOoF,MAAM6C,cAAgB/H,KAAK4C,QAAQ,GAAGzE,MAAMmG,QAAUtE,KAAKoJ,kBAGpEtJ,cAAcoJ,EAAcC,EAAiBC,GAC3C,OAAO,IAAIH,EAAkCC,EAAcC,EAAiBC,IAQhF,MAAMG,EAAc,CAClBC,QAAS,UACTC,UAAW,YACXC,SAAU,YAYNC,EAAmB,EAEzB,MAAMC,UAAoCrB,EAExCzI,YAAYoJ,EAAcW,GACxB3E,MAAMgE,GACNlJ,KAAK8J,iBAAmBD,EACxB7J,KAAK4C,QAAU,CACbkG,EAActK,OAAO,UAAW+K,EAAYC,QAAS,WACrDV,EAActK,OAAO,YAAa+K,EAAYE,UAAW,aACzDX,EAActK,OAAO,WAAY+K,EAAYG,SAAU,aAI3DvL,YACE,MAAqC,mBAA1B6B,KAAK8J,iBACP9J,KAAK8J,mBAEP9J,KAAK8J,iBAGdhK,UACE,OAAOqI,EAAcC,MAGvBtI,YAAYkC,GAEV,OADAhC,KAAK4C,QAAQ+G,GAAkB5G,YAAYf,GACpChC,KAGTF,aACE,OAAOlC,OAAOmM,OAAO7E,MAAMT,aAAc,CACvCuF,aAAchK,KAAK7B,QAIvB2B,cAAcoJ,EAAcW,GAC1B,OAAO,IAAID,EAA4BV,EAAcW,IAazD,MAAMI,EAEJnK,OAAOyB,EAAKQ,GACV,OAAQR,EAAIY,MACV,IAAK,mBACH,OAAOnC,KAAKkK,uBAAuB3I,GACrC,IAAK,iBACH,OAAOvB,KAAKmK,qBAAqB5I,GACnC,IAAK,gBACH,OAAOvB,KAAKoK,oBAAoB7I,EAAKQ,GACvC,QACE,oCAAqCR,EAAIY,QAI/CrC,uBAAuByB,GACrB,IAAI6H,EAAoB7H,EAAI6H,mBAAqB,EACjD,OAAOH,EAAkCzK,OAAO+C,EAAI8I,IAAK9I,EAAI4H,gBAAiBC,GAGhFtJ,qBAAqByB,GACnB,IAAIuG,EAAWe,EAA8BrK,OAAO+C,EAAI8I,KAExD,IAAK,IAAI1H,KAAapB,EAAIqB,QACxBkF,EAASwC,UAAUxB,EAActK,OAAOmE,EAAUiG,OAAQjG,EAAUxE,QAGtE,OAAO2J,EAGThI,oBAAoByB,EAAKQ,GACvB,IAAIwI,EAAgBxI,EAASR,EAAIiJ,SACjC,OAAOZ,EAA4BpL,OAAO+C,EAAI8I,IAAKE,IAQxBxN,EAAoBS,EAAE0B,EAAqB,IAAK,WAAa,OAAOuL,IAMnG,MAAMA,EAEJ3K,YAAYuB,GACVrB,KAAKqB,QAAUA,EACfrB,KAAK0K,gBAAkB,IAAIT,EAG7BnK,OAAOyB,EAAKQ,GACV,OAAQR,EAAIY,MACV,IAAK,eACH,OAAOnC,KAAK2K,mBAAmBpJ,GACjC,IAAK,gBACH,OAAOvB,KAAK4K,oBAAoBrJ,EAAKQ,GACvC,IAAK,cACH,OAAO/B,KAAK6K,kBAAkBtJ,GAChC,QACE,MAAMlB,iCAAiCkB,EAAIY,SAIjDrC,mBAAmByB,GACjB,IAAIuJ,EAAS9K,KAAKqB,QAAQE,EAAIuJ,QAC9B,QAAsB,IAAXA,EACT,MAAMzK,8BAA8BkB,EAAIuJ,UAG1C,IAAI9I,EAAQ6D,EAA0BrH,OAAO+C,EAAIwJ,aAAcD,EAAOE,SAQtE,OANIF,EAAOG,iBACTjJ,EAAMkJ,kBAAkBJ,EAAOG,iBAE7B1J,EAAIwE,cACN/D,EAAMmJ,gBAAgB5J,EAAIwE,cAErB/D,EAGTlC,oBAAoByB,EAAKQ,GACvB,IAAIC,EAAQ0F,EAA4BlJ,OAAO+C,EAAIwJ,cAE/CxJ,EAAI6J,QACNpJ,EAAMoJ,OAAOrJ,EAASR,EAAI6J,SAG5B,IAAK,IAAI5I,KAAejB,EAAImB,UAAW,CACrC,IAAIoF,EAAW9H,KAAK0K,gBAAgBlM,OAAOgE,EAAaT,GACxDC,EAAMqJ,YAAYvD,GAGpB,OAAO9F,KAUL,SAAU9E,EAAQgC,EAAqBnC,GAE7C,aAGA,MAAMuO,EACJxL,YAAYyL,GACVvL,KAAKyB,QAAU8J,EACfvL,KAAKwL,cAAgB,IAAIC,IAAI,CAAC,OAAQ,cAGxC3L,qBACE,OAAOE,KAAK0L,MAAM1L,KAAK2L,aAGzB7L,YACE,IAAI8L,EAAMC,OAAOC,UAEjB,MAAO,CACLrK,QAASzB,KAAKyB,QAAQsK,kBACtBC,YAAaC,SAASC,eAAe,oBAAoBC,UACzDL,UAAW,CACTM,YAAaR,EAAIS,IACjBC,QAASV,EAAIU,QACbC,WAAYX,EAAIW,WAChBC,SAAUZ,EAAIY,SACdC,UAAWb,EAAIa,UACfC,UAAWlJ,EAAEmJ,QAAO,EAAM,GAAIf,EAAIc,WAClCE,MAAOhB,EAAIgB,OAEbC,SAAUrJ,EAAEmJ,QAAO,EAAM,GAAId,OAAOiB,YAIxChN,MAAMtC,GACJ,GAAiB,iBAANA,GAAwB,OAANA,EAC3B,IAAK,IAAIiB,KAAOb,OAAOmP,KAAKvP,GACtBwC,KAAKwL,cAAcwB,IAAIvO,GACzBjB,EAAEiB,GAAO,WAETjB,EAAEiB,GAAOuB,KAAK0L,MAAMlO,EAAEiB,IAI5B,MAAiB,iBAANjB,EACFwC,KAAKiN,mBAAmBzP,GAE1BA,EAGTsC,mBAAmBb,GACjB,OAAOA,EAAEiO,QAAQ,sBAAuB,cACrCA,QAAQ,wBAAyB,gBACjCA,QAAQ,yBAA0B,cAClCA,QAAQ,mBAAoB,eAOnC,IAAIC,EAAM,CACNC,UAAW,CACP3H,IAAK,0EAQkB1I,EAAoBS,EAAE0B,EAAqB,IAAK,WAAa,OAAOmO,IAInG,MAAMA,EACJvN,YAAY2B,GACVzB,KAAKyB,QAAUA,EAGjB3B,cACE,MAAO,CACLwN,MAAO,gBAAkBtN,KAAKyB,QAAQhE,KACtC8P,cAAe,IAAKjC,EAActL,KAAKyB,SAAU+L,sBAIrD1N,mBAAmBuF,GACjB,IAAIgC,EAAU,CACZ,uCACA,wBACIyF,UAAUW,gBAAgBX,UAAUY,SAASZ,UAAUa,OAAOlQ,QAAQoO,OAAO+B,SAASC,WAC1F,MAAQC,KAAKC,UAAU1I,EAAOkI,cAAe,KAAM,GAAK,OACxD7J,KAAK,MACP,aAAa1D,KAAKgO,YAAY3I,EAAOiI,MAAOjG,GAG9CvH,kBAAkBwN,EAAOjG,GACvB,IAAI4G,QAAiBC,MAAMf,EAAIC,UAAU3H,IAAK,CAC5C0I,OAAQ,OACRC,KAAMN,KAAKC,UAAU,CACnBT,MAAOA,EACPjG,QAASA,MAGb,IAAK4G,EAASI,GACZ,MAAM,IAAIhO,kCAAkC4N,EAAS9I,WAAW8I,EAASK,eAE3E,aAAaL,EAASM,UAUpB,SAAUrR,EAAQgC,EAAqBnC,GAE7C,aACAA,EAAoBiB,EAAEkB,GAoCtB,MAAMsP,EACJ1O,YAAY2O,GACVzO,KAAKyO,GAAKA,EACVzO,KAAK0O,MAAQ,GACb1O,KAAK2O,kBAGP7O,IAAI8O,EAAMC,GACR,OAzCJ,SAAiBjQ,EAAQkQ,EAAUD,GACjC,IAAIE,EAASD,EAASE,MAAM,KAC5B,IAAK,IAAI7R,EAAI,EAAGA,EAAI4R,EAAOzK,OAAS,EAAGnH,IAAK,CAC1C,IAAI8R,EAAQF,EAAO5R,GACnB,GAA6B,iBAAlByB,EAAOqQ,IAAiC,OAAVA,EACvC,OAAOJ,EAETjQ,EAASA,EAAOqQ,GAElB,IAAI9Q,EAAQS,EAAOmQ,EAAOA,EAAOzK,OAAS,IAC1C,YAAyB,IAAVnG,EAAyB0Q,EAAe1Q,EA+B9C+Q,CAAQlP,KAAK0O,MAAOE,EAAMC,GAGnC/O,IAAI8O,EAAMzQ,IA9BZ,SAAiBS,EAAQkQ,EAAU3Q,GACjC,IAAI4Q,EAASD,EAASE,MAAM,KAC5B,IAAK,IAAI7R,EAAI,EAAGA,EAAI4R,EAAOzK,OAAS,EAAGnH,IAAK,CAC1C,IAAI8R,EAAQF,EAAO5R,GACU,iBAAlByB,EAAOqQ,IAAiC,OAAVA,IACvCrQ,EAAOqQ,GAAS,IAElBrQ,EAASA,EAAOqQ,GAElBrQ,EAAOmQ,EAAOA,EAAOzK,OAAS,IAAMnG,EAsBlCgR,CAAQnP,KAAK0O,MAAOE,EAAMzQ,GAC1B6B,KAAKoP,QAGPtP,UAAU4O,GACR1O,KAAK0O,MAAQA,EAOf5O,kBACE,IAAIuP,EAAQxD,OAAOyD,aAAaC,QAAQvP,KAAKyO,IAC7C,GAAIY,EAAO,CACT,IAAIlI,EAAO2G,KAAK0B,MAAMH,GAKtB,OADArP,KAAK0O,MAAQvH,EAAKuH,OAASvH,EACpBA,EAET,OAAO,KAOTrH,QACEE,KAAKyP,cACL5D,OAAOyD,aAAaI,QAAQ1P,KAAKyO,GAAIX,KAAKC,UAAU/N,KAAK2P,sBAM3D7P,eAQAA,oBACE,MAAO,CACL4O,MAAO1O,KAAK0O,QAwClB,IAAIkB,EAAW,IA/Bf,MACE9P,YAAY+P,GACV7P,KAAK6P,mBAAqBA,EAC1B7P,KAAK8P,eAAiB,IAAIC,MAAMF,GAGlC/P,iBACEE,KAAK8P,eAAeE,QAAQC,YAAYC,OACxClQ,KAAK8P,eAAeK,MAGtBrQ,sBACE,IAAIsQ,EAAkBpQ,KAAK8P,eAAe9P,KAAK6P,mBAAqB,GACpE,QAA+B,IAApBO,EACT,OAEF,IAAIC,EAAUD,EAAkB,IAAOH,YAAYC,MACnD,OAAIG,GAAW,OAAf,EAGO,IAAIzJ,QAAQ,SAAUC,EAASC,GACpCwJ,WAAWzJ,EAASwJ,OAUK,GAE3BE,EAAgB1E,OAAOqC,MAC3BrC,OAAOqC,MAAQ,WAEb,OADA0B,EAASY,iBACFD,EAAcE,MAAMzQ,KAAM0Q,YAiGnC,MAAMC,UAAkCnC,EAKtC1O,OAAO2F,GAEL,OADAzF,KAAKyF,IAAMA,EACJzF,KAMTF,OAAO8Q,GAEL,OADA5Q,KAAK6Q,IAAgB,IAAVD,EACJ5Q,KAGTF,sBACME,KAAK8Q,qBACD9Q,KAAK+Q,SAIfjR,cACE,IAAIoQ,GAAM,IAAIc,MAAOC,UACjBJ,EAAM7Q,KAAK6Q,KAAO,MACtB,OAAQ7Q,KAAKkR,aAAeL,EAAMX,EAAMlQ,KAAKkR,YAG/CpR,eACE,IAAIqR,QAlGRlL,eAA0BR,SAClBmK,EAASwB,gBACf,IAAInD,QAAiBC,MAAMzI,GACvB4L,QAAqBpD,EAASzF,OAC9B2I,GAAS,IAAKG,WAAaC,gBAAgBF,EAAc,YAM7D,OAJAzT,OAAOC,eAAesT,EAAQ,MAAO,CACnCpT,IAAK,IAAM0H,IAGN0L,EAwFcK,CAAWxR,KAAKyF,KACnCzF,KAAKyR,YAAYN,GACjBnR,KAAKoP,QAOPtP,YAAYqR,GACVnR,KAAK0O,MArDT,SAASgD,EAAaC,GACpB,GAA6B,IAAzBA,EAAKC,SAAStN,OAChB,OAAOuN,WAAWF,EAAKG,YAAc,KAEvC,IAAIlT,EAAS,GACb,IAAK,IAAImT,KAAaJ,EAAKC,SACzBhT,EAAOmT,EAAUC,SAAWN,EAAaK,GAE3C,OAAOnT,EA6CQ8S,CAAaP,GAAQc,OAOpCnS,kBACE,IAAIqH,EAAOjC,MAAMyJ,kBACbxH,IACFnH,KAAKkR,YAAc/J,EAAK+J,aAO5BpR,cACEE,KAAKkR,aAAc,IAAIF,MAAOC,UAOhCnR,oBACE,OAAOlC,OAAOmM,OAAO,GAAI7E,MAAMyK,oBAAqB,CAClDuB,YAAalR,KAAKkR,eAaxB,IAAIgB,EAAa,IAAI1D,EAAc,uBAE/B2D,EAAa,IAAKxB,EAA0B,uBAC7CyB,kBAAkBnG,SAASoG,wCAC3BC,OAAO,OAENC,EAAiB,IAAK5B,EAA0B,2BACjDyB,kBAAkBnG,SAASoG,+CAC3BC,OAAO,OAENE,EAAc,IAAK7B,EAA0B,wBAC9CyB,kBAAkBnG,SAASoG,2CAC3BC,OAAO,OAeV,IAAIG,EAAO5G,OAAO6G,WACdC,EAAgB9G,OAAO+B,SAASgF,KAAO,kBAEvCC,EAAW,CACXC,KAAML,EAAO,WACbM,MAAON,EAAO,YACdO,KAAMP,EAAO,WACbQ,MAAOR,EAAO,WACdS,KAAMT,EAAO,YACbU,OAAQV,EAAO,qBACfW,YAAaX,EAAO,iBACpBY,SAAUZ,EAAO,iBACjBa,KAAMb,EAAO,mBACbc,gBAAiBd,EAAO,mBACxBe,gBAAiBf,EAAO,2BACxBgB,iBAAkBhB,EAAO,4BACzBiB,gBAAiBjB,EAAO,2BACxBkB,mBAAoBlB,EAAO,mBAC3BmB,kBAAmBnB,EAAO,kBAC1BoB,qBAAsBpB,EAAO,qBAC7BqB,gBAAiBrB,EAAO,+BACxBsB,YAAatB,EAAO,mBACpBuB,QAASvB,EAAO,kBAChBwB,eAAgBxB,EAAO,eACvByB,SAAUvB,EAAgB,eAC1BwB,YAAaxB,EAAgB,mBAC7ByB,WAAYzB,EAAgB,kBAC5B0B,cAAe1B,EAAgB,qBAC/B2B,GAAI,CACAC,KAAM5B,EAAgB,qCACtB6B,MAAO7B,EAAgB,qCACvB8B,SAAU9B,EAAgB,qCAC1B+B,KAAM/B,EAAgB,qCACtBgC,IAAKhC,EAAgB,sCAEzBiC,OAAQ,CACJC,eAAgBlC,EAAgB,6BAChCmC,qBAAsBnC,EAAgB,wCAE1CoC,aAAcC,GAAgBvC,eAAoBuC,QAClDC,UAAWC,GAAazC,eAAoByC,QAC5CC,QAASC,GAAS3C,UAAe2C,QACjCC,eAAgBC,GAAY7C,wBAA6B6C,SA4B7D,IAAIC,EAAW,IAAI9J,IAEnB,SAAS+J,EAAQC,GACXF,EAASvI,IAAIyI,KAGjBjS,YAAYiS,aAAeC,SAAS,QACpCH,EAASI,IAAIF,IAGfD,6LAO4B3C,EAASkB,qJAmJb,IAAItI,IAAI,CAAC,QAAS,YAAa,YAAa,WAAY,YAAa,YAChE,IAAIA,IAAI,CAAC,YAAa,aAAc,YAAa,aAyI9E,SAASmK,EAAQC,GACf,MAAO,wBAA0BA,EAgBnCL,EAAQ,kNAeR,MAAMM,EAEJhW,YAAYiW,GACV/V,KAAK+V,KAAOA,EACZ/V,KAAKyO,GAAKsH,EAAKtH,GAGjB3O,UACE,OAAOE,KAAK+V,KAAKtY,KAGnBqC,iBACE,OAA+B,IAAxBE,KAAK+V,KAAKC,YAGnBlW,gBACE,OAAOE,KAAK+V,KAAKC,YAGnBlW,oBAAoBmW,GAClB,IAAIF,EAAQE,GAAiB,EAAKjW,KAAKkW,iBAAmBlW,KAAK+V,KAAKC,YAChEG,EAAcC,KAAKC,IAAIN,EAAM/V,KAAK+V,KAAKO,mBAAqBtW,KAAK+V,KAAKQ,yBAC1E,OAAOH,KAAKI,MAAML,EAAcnW,KAAK+V,KAAKU,iBAG5C3W,mBAAmB4W,GACjB,IACIX,GADcW,EAAkB1W,KAAK+V,KAAKU,gBACpBzW,KAAK+V,KAAKQ,4BAA8B,EAAIvW,KAAK+V,KAAKO,mBAChF,OAAOF,KAAKI,MAAMJ,KAAKO,KAAKZ,EAAO/V,KAAKkW,iBAAmBlW,KAAK+V,KAAKC,eAWzE,IAAIY,EAAoB,CAAC,QAAS,QAAS,MAAO,SAAU,MAAO,QAAS,UAAW,QAAS,MAAO,WAAY,SAAU,OAAQ,WAYrI,SAASC,EAAc3B,GACrB,IAAI4B,EAAQtE,EAAYzU,IAAImX,GAC5B,YAAqB,IAAV4B,EACF,EAEFA,EAAMC,MAIf,SAASC,EAAW9B,GAClB,IAAI4B,EAAQtE,EAAYzU,IAAImX,GAC5B,YAAqB,IAAV4B,EACF,EAEFA,EAAMG,MAIf,MAAMC,EACJpX,cACE,IAAK,IAAIqC,KAAQyU,EACf5W,KAAKmC,GAAQ,EAIjBrC,QACE,OAAOlC,OAAOmM,OAAO,IAAImN,EAAelX,MAG1CF,OAAOqX,GACL,IAAIC,EAAS,IAAIF,EACjB,IAAK,IAAI/U,KAAQyU,EACXO,EAAkBE,SAASlV,KAC7BiV,EAAOjV,GAAQnC,KAAKmC,IAGxB,OAAOiV,EAGTtX,SACE,IAAK,IAAIwX,KAAS1Z,OAAO2Z,OAAOvX,MAC9B,GAAc,IAAVsX,EACF,OAAO,EAGX,OAAO,EAGTxX,MACE,IAAI0X,EAAM,EACV,IAAK,IAAIF,KAAS1Z,OAAO2Z,OAAOvX,MAC9BwX,GAAOF,EAET,OAAOE,EAMT1X,KAAK2X,GACH,IAAK,IAAItV,KAAQyU,EAAmB,CAElCa,EAAYtV,EADAnC,KAAKmC,KAKrBrC,gBACE,IAAI4X,EAAW,EACf,IAAK,IAAIvV,KAAQyU,EACfc,GAAY1X,KAAKmC,GAAQ6U,EAAW7U,GAEtC,OAAOuV,EAGT5X,iBACE,OAAO8W,EAAkB5O,OAAO,CAACwP,EAAKrV,IAASqV,EApFnD,SAAkBtC,GAChB,IAAI4B,EAAQtE,EAAYzU,IAAImX,GAC5B,YAAqB,IAAV4B,EACF,EAEFA,EAAM3G,IA+E0CwH,CAASxV,GAAQnC,KAAKmC,GAAO,GAGpFrC,eAAe8X,EAAUC,EAAO,UAE9B,OAAOC,EADe9X,KAAK+X,sBAAsBF,GACND,GAG7C9X,sBAAsB+X,EAAO,UAC3B,GAAa,YAATA,GAAsB7X,KAAKgY,OAAS,EACtC,OAAOnB,EAAc,UAGvB,IAAIoB,EAAkBrB,EACnBsB,OAAO/V,GAAQnC,KAAKmC,GAAQ,GAC5BqC,IAAIrC,GAAQ0U,EAAc1U,IAE7B,OAAOiU,KAAK+B,OAAOF,GAOrBnY,SAASsY,GACP,IAAIC,EAAa,IAAInB,EACrB,IAAK,IAAKhC,EAAWoC,KAAU1Z,OAAO6E,QAAQzC,MAC5CqY,EAAWnD,GAAaoC,EAAQc,EAAWlD,GAE7C,OAAOmD,EAMTvY,gBACE,IAAIwY,EAAc,IAAIpB,EACtB,IAAK,IAAKhC,EAAWoC,KAAU1Z,OAAO6E,QAAQzC,MAC5CsY,EAAYpD,GAAakB,KAAK+B,IAAI,EAAGb,GAEvC,OAAOgB,EAGTxY,UACE,OAAO8W,EAAkBpS,IAAIrC,GAAQnC,KAAKmC,IAG5CrC,iBAAiByY,GACf,IAAIC,EAAS,IAAItB,EAIjB,OAHAqB,EAAME,QAAQ,CAACnB,EAAOna,KACpBqb,EAAO5B,EAAkBzZ,IAAMma,IAE1BkB,GAkBX,SAASV,EAAmBY,EAAiBd,GAQ3C,OAAqD,IAA9CxB,KAAKI,MAAMoB,EAAWc,EAAkB,IAIjD,IAAIC,EAAmB,CAErBC,kBAAiB,IACR/M,OAAOiB,UAAU+L,MAG1BC,cAAc5D,QACiC,IAA/B1C,EAAYzU,IAAImX,GAShCpV,aAAaoV,EAAW6D,EAAgBC,EAAY,GAClD,IACIC,EAAaF,GADC/B,EAAW9B,IAAc,IAAM8D,GAAa,KAE9D,OAAO5C,KAAKI,MAAM,GAAKyC,GAAc,IAGvCC,cAAa,CAAChE,EAAWiE,EAAS,IACzBnC,EAAW9B,GAAaiE,EAQjCC,eAAc,CAAClE,EAAW0C,IACjBE,EAAmBjB,EAAc3B,GAAY0C,IA+CxD,SAASyB,EAAqBC,GAC5B,IAAInS,EAmBN,SAA4BmS,GAC1B,IAAIC,EAkBN,SAAkCD,GAChC,IAAIE,EAAUF,EAAQG,qBAAqB,UAE3C,IAAK,IAAIC,KAAUF,EAAS,CAC1B,IAAIG,EAAOD,EAAO5H,UAClB,GAAI6H,EAAKtC,SAAS,sBAChB,OAAOsC,GAxBEC,CAAyBN,GAGlCO,EAyCN,SAAsCC,GACpC,IAGIC,EAHAC,EAA0BF,EAAUG,QAAQ,KAC5CC,EAAoBC,EAAYL,EAAWE,EAAyB,IAAK,KAGzEI,EAAmBJ,EAA0BE,EAAkB5V,OACnE,KAAO8V,EAAmBN,EAAUxV,OAAQ8V,IAC1C,GAAoC,MAAhCN,EAAUM,GAA2B,CACvCL,EAAaI,EAAYL,EAAWM,EAAkB,IAAK,KAC3D,MAIJ,MAAO,CACLC,cAAevM,KAAK0B,MAAM0K,GAC1B1B,OAAQ1K,KAAK0B,MAAMuK,IAxDAO,CA+BvB,SAAqCf,GACnC,IACIgB,EAAahB,EAAOU,QADX,sBAAA,qBACoC3V,OACjD,OAAO6V,EAAYZ,EAAQgB,EAAY,IAAK,KAnC5BC,CAA4BjB,IAGxCkB,EA+DN,SAAyBlB,GACvB,IACIgB,EAAahB,EAAOU,QADX,kBAAA,iBACoC3V,OACjD,OAAO6V,EAAYZ,EAAQgB,EAAY,IAAK,KAlE1BG,CAAgBnB,GAElC,MAAO,CACLc,cAAeR,EAAeQ,cAC9B7B,OAAQqB,EAAerB,OACvBmC,QAAS7M,KAAK0B,MAAMiL,IA9BXG,CAAmBtB,GAC1BuB,EAAc1T,EAAKkT,cAEnBzX,EAAU,IAAIkY,IAClB,IAAK,IAAIxF,KAAY1X,OAAOmP,KAAK8N,GAC/BjY,EAAQmY,IAAIC,SAAS1F,GAAW,IAAIQ,EAAe+E,EAAYvF,KAGjE,MAAO,CACL1S,QAAAA,EACAqY,mBAAoBrd,OAAOmP,KAAK5F,EAAKqR,QACrC0C,WAAY/T,EAAKwT,QAAQQ,mBA2F7B,SAAShB,EAAYiB,EAAQC,EAAiBC,EAAc,IAAKC,EAAc,KAC7E,IAAIC,EAAgB,EAChBC,EAAgB,EAChBC,GAAkB,EAEtB,IAAK,IAAIve,EAAIke,EAAkB,EAAGle,EAAIie,EAAO9W,OAAQnH,IAAK,CACxD,IAAIwe,EAAOP,EAAOje,GAQlB,GAPIwe,IAASL,GACXE,IAEEG,IAASJ,IACXE,IACAC,EAAiBve,GAEfse,IAAkBD,EACpB,OAAOJ,EAAOQ,UAAUP,EAAiBK,EAAiB,IAYhE,MAAMG,EAEJ/b,YAAYmb,GACVjb,KAAK8b,oBAAsBb,EAC3Bjb,KAAK+b,QAGPjc,QACEE,KAAK3B,KAAOwd,EAAoEG,iBAChFhc,KAAKic,iBAAmB,IAAIxQ,IAAI,CAAC,EAAG,EAAG,EAAG,IAC1CzL,KAAKkc,sBAAwB,KAC7Blc,KAAKmc,aACLnc,KAAKoc,WAAa,CAChB,CAAC,MAAO,QAAS,WACjB,CAAC,QAAS,QAAS,UACnB,CAAC,SACD,CAAC,WAILtc,aACEE,KAAKwY,OAAS,GACd,IAAK,IAAItD,KAAalV,KAAK8b,oBACzB9b,KAAKwY,OAAOtD,GAAa,CACvBmH,SAAS,EACTC,SAAU,GAKhBxc,QAAQzB,GACN2B,KAAK3B,KAAOA,EACZmF,EAAExD,MAAM4D,QAAQ,UAGlB9D,gBAAgBwV,GACd,OAAOtV,KAAKic,iBAAiBjP,IAAIsI,GAGnCxV,iBAAiBwV,EAAUiH,GAAY,GACjCA,EACFvc,KAAKic,iBAAiBtG,IAAIL,GAE1BtV,KAAKic,iBAAiBO,OAAOlH,GAE/B9R,EAAExD,MAAM4D,QAAQ,UAGlB9D,kBAAkB8Q,GAChB5Q,KAAKkc,sBAAwBtL,EAC7BpN,EAAExD,MAAM4D,QAAQ,UAMlB9D,uBACE,OAAOE,KAAK8b,oBAAoB5D,OAAOhD,GAAalV,KAAKwY,OAAOtD,GAAWmH,SAG7Evc,mBAAmBoV,GACjB,OAAOlV,KAAKwY,OAAOtD,GAAWmH,QAGhCvc,gBAAgBoV,EAAWqH,GACzBvc,KAAKwY,OAAOtD,GAAWmH,QAAUE,EACjC/Y,EAAExD,MAAM4D,QAAQ,UAMlB9D,yBACE,IAAIwY,EAAc,IAAIpB,EACtB,IAAK,IAAIhC,KAAalV,KAAK8b,oBACzBxD,EAAYpD,GAAalV,KAAKwY,OAAOtD,GAAWoH,SAElD,OAAOhE,EAGTxY,iBAAiBoV,GACf,OAAOlV,KAAKwY,OAAOtD,GAAWoH,SAGhCxc,iBAAiBoV,EAAWoC,GAC1BtX,KAAKwY,OAAOtD,GAAWoH,SAAWhF,EAClC9T,EAAExD,MAAM4D,QAAQ,UAGlB9D,cAAcsc,GACZpc,KAAKoc,WAAaA,EAClB5Y,EAAExD,MAAM4D,QAAQ,UAGlB9D,SACE,MAAO,CACLzB,KAAM2B,KAAK3B,KACX4d,iBAAkB,IAAIjc,KAAKic,iBAAiB1E,UAC5C2E,sBAAuBlc,KAAKkc,sBAC5B1D,OAAQxY,KAAKwY,OACb4D,WAAYpc,KAAKoc,YAIrBtc,OAAO2c,GACLzc,KAAK3B,KAAOoe,EAASpe,KACrB2B,KAAKic,iBAAmB,IAAIxQ,IAAIgR,EAASR,kBACzCjc,KAAKkc,sBAAwBO,EAASP,sBACtClc,KAAKwY,OAASiE,EAASjE,OACvBxY,KAAKoc,WAAaK,EAASL,YAK/BP,EAAoEG,iBAAmB,cACvFH,EAAoEa,YAAc,SAQlF,MAAMC,EAOJ7c,YAAY8C,EAASqY,EAAoB2B,GACvC5c,KAAK4C,QAAUA,EACf5C,KAAKib,mBAAqBA,EAC1Bjb,KAAK4c,UAAYA,EACjB5c,KAAK6c,YAAc,IAAIhB,EAAoEZ,GAM7Fnb,2BAA2Bgd,GACzB,OAAOA,EACJ5E,OAAOlY,KAAK6c,YAAYE,wBACxBC,SAAShd,KAAK6c,YAAYI,0BAC1BC,gBAMLpd,sBAAsBqd,GACpB,OAAOA,EAAgBjF,OAAO5C,GAAYtV,KAAK6c,YAAYO,gBAAgB9H,IAM7ExV,oBAAoBgd,GAElB,OADAA,EAAuB9c,KAAKqd,2BAA2BP,IAC3BQ,kBAAoB,GAQlDxd,aAAaqd,EAAiBL,EAAsB5B,EAAa,GAI/D,OAHAiC,EAAkBnd,KAAKud,sBAAsBJ,GAC7CL,EAAuB9c,KAAKqd,2BAA2BP,GAEnD9c,KAAK6c,YAAYxe,OAASwd,EAAoEa,YACzF1c,KAAKwd,sBAAsBL,EAAiBL,EAAsB5B,GAEpElb,KAAKyd,0BAA0BN,EAAiBL,EAAsB5B,GAS/Epb,0BAA0Bqd,EAAiBL,EAAsB5B,EAAa,GAC5E,IAAIwC,EAAyB,IAAI5C,IAC7B6C,EAAY,IAAI3d,KAAK4C,QAAQmK,QAAQ6Q,UAEzC,IAAK,IAAItI,KAAYqI,EAAW,CAC9B,IAAIE,EACJ,GAAIV,EAAgB9F,SAAS/B,GAAW,CACtC,IACIwI,EADS9d,KAAK4C,QAAQ7E,IAAIuX,GACFyI,mBAAmB/d,KAAK6c,YAAYX,uBAChE2B,EAAiB7d,KAAKge,kBAAkBF,EAAgBhB,EAAsB5B,QAE9E2C,EAAiB,IAAI3G,EAEvBwG,EAAuB3C,IAAIzF,EAAUuI,GACrCf,EAAuBA,EAAqBE,SAASa,GAGvD,OAAOH,EAST5d,sBAAsBqd,EAAiBL,EAAsB5B,EAAa,GACxE,IAAIwC,EAAyB,IAAI5C,IAC7B6C,EAAY,IAAI3d,KAAK4C,QAAQmK,QAAQ6Q,UAErCK,EAAoBnB,EAAqB5D,gBAAkBgC,EAC3DgB,EAAwBlc,KAAK6c,YAAYX,sBAEzCgC,EAAoB,EACpBC,EAAqB,GACrBC,EAAuB,EAE3B,IAAK,IAAI9I,KAAYqI,EAAW,CAC9B,IAAKR,EAAgB9F,SAAS/B,GAC5B,SAEF,IAAIxS,EAAS9C,KAAK4C,QAAQ7E,IAAIuX,GAC9B6I,EAAmB7I,GAAY,EAAIxS,EAAOub,gBAC1CD,GAAwBD,EAAmB7I,GAC3C4I,GAAqBpb,EAAOib,mBAAmB7B,GAGjD,IAAIoC,EAAgClI,KAAKmI,IAAI,EAAGL,EAAoBD,GAEpE,IAAK,IAAI3I,KAAYqI,EAAW,CAC9B,IAAIE,EACJ,GAAIV,EAAgB9F,SAAS/B,GAAW,CACtC,IAEIwI,EADkCQ,GADTH,EAAmB7I,GAAY8I,GAELH,EACvDJ,EAAiB7d,KAAKge,kBAAkBF,EAAgBhB,EAAsB5B,QAE9E2C,EAAiB,IAAI3G,EAEvBwG,EAAuB3C,IAAIzF,EAAUuI,GACrCf,EAAuBA,EAAqBE,SAASa,GAGvD,OAAOH,EAGT5d,kBAAkBge,EAAgBhB,EAAsB5B,EAAa,GACnE,IAAIsD,EAAsB,IAAItH,EAC1BuH,EAAa,GACjB,IAAK,IAAIC,KAAS1e,KAAK6c,YAAYT,WAAY,CAC7C,GAAI0B,EAAiB,EACnB,MAGF,IAAIG,EAAoB,EACxB,IAAK,IAAI/I,KAAawJ,EAAO,CAC3B,IAAIzF,EAAa6D,EAAqB5H,GACtCuJ,EAAWvJ,GAAalV,KAAK4c,UAAU1D,cAAchE,EAAWgG,GAChE+C,GAAqBhF,EAAawF,EAAWvJ,GAE/C,IAAIyJ,EAAavI,KAAKmI,IAAI,EAAGT,EAAiBG,GAE9C,IAAK,IAAI/I,KAAawJ,EAAO,CAC3B,IAAIzF,EAAa6D,EAAqB5H,GACtCsJ,EAAoBtJ,GAAakB,KAAKwI,MAAM3F,EAAa0F,GACzDb,GAAkBU,EAAoBtJ,GAAauJ,EAAWvJ,GAG5D4I,EAAiB,GACnB9d,KAAK6e,eAAef,EAAgBhB,EAAsB0B,EAAqBE,EAAOD,GACnFK,KAAK,SAAU5J,EAAWoC,GACzBwG,GAAkBxG,GAASmH,EAAWvJ,IAAc,GACpDsJ,EAAoBtJ,IAAcoC,IAK1C,OAAOkH,EAUT1e,eAAege,EAAgBhB,EAAsB0B,EAAqBO,EAAYN,GACpF,IAAIO,EAAc,IAAI9H,EAEtB,KAAO4G,EAAiB,GAAG,CACzB,IAAImB,GAAmB,EACnBC,EAAc,KACdC,EAAeC,OAAOC,iBAE1B,IAAK,IAAInK,KAAa6J,EACpB,GAAIjC,EAAqB5H,GAAasJ,EAAoBtJ,GAAa8J,EAAY9J,GAAY,CAC7F+J,GAAmB,EAEnB,IAAIK,EAAOlJ,KAAKmJ,IAAIzB,EAAiBW,EAAWvJ,IAC5CoK,EAAOH,IACTA,EAAeG,EACfJ,EAAchK,GAKpB,IAAK+J,EACH,MAGF,GAAInB,EAAiB1H,KAAKmJ,IAAIzB,EAAiBW,EAAWS,IAExD,MAEFF,EAAYE,IAAgB,EAC5BpB,GAAkBW,EAAWS,GAG/B,OAAOF,GA+BX,MAAMQ,EAEJ1f,aAAa2f,GAGX,OAFAzf,KAAK0f,gBACLlc,EAAEic,GAAIE,OAAO3f,KAAK4f,KACX5f,KAGTF,YAAY2f,GAGV,OAFAzf,KAAK0f,gBACLlc,EAAEic,GAAII,MAAM7f,KAAK4f,KACV5f,KAGTF,SAAS2f,GAGP,OAFAzf,KAAK0f,gBACLlc,EAAEic,GAAIK,OAAO9f,KAAK4f,KACX5f,KAGTF,gBACE,GAAgC,mBAArBE,KAAK+f,YACd,QA5CN,SAAwBN,EAAIO,GAC1B,IAAIC,EAAW,IAAIC,iBAAkBC,IACnCC,EACE,IAAK,IAAIC,KAAYF,EACnB,IAAK,IAAIxO,KAAQ0O,EAASC,WACxB,GAAI3O,IAAS8N,GAAM9N,EAAK4O,SAASd,GAAK,CACpCnP,WAAW0P,EAAU,GACrBC,EAASO,aACT,MAAMJ,KAMhBH,EAASQ,QAAQxU,SAAU,CACzByU,YAAY,EACZC,WAAW,EACXC,SAAS,IA8BTC,CADS7gB,KAAK4f,IAAI,GACC,IAAM5f,KAAK+f,gBAelC,MAAMe,UAA4DtB,EAOhE1f,YAAY+c,EAAakE,EAAiB9F,GACxC/V,QACAlF,KAAK6c,YAAcA,EACnB7c,KAAK+gB,gBAAkBA,EACvB/gB,KAAKib,mBAAqBA,EAC1Bjb,KAAKghB,gBACLhhB,KAAKihB,iBACLjhB,KAAKkhB,YAGPphB,gBACEE,KAAK4f,IAAMpc,EAAExD,KAAKmhB,aAAaC,QAC/BphB,KAAKqhB,gBAAkBrhB,KAAK4f,IAAI0B,KAAK,oBACrCthB,KAAKuhB,SAAWvhB,KAAK4f,IAAI0B,KAAK,0BAC9BthB,KAAKwhB,OAASxhB,KAAK4f,IAAI0B,KAAK,sBAC5BthB,KAAKyhB,eAAiBzhB,KAAK4f,IAAI0B,KAAK,kBACpCthB,KAAK0hB,gBAAkB1hB,KAAK4f,IAAI0B,KAAK,mBACrCthB,KAAK2hB,aAAe3hB,KAAK4f,IAAI0B,KAAK,gBAGpCxhB,aACE,2GAEUE,KAAK4hB,6DAEL5hB,KAAK6hB,0IAIO7hB,KAAK8hB,+GAEL9hB,KAAK+hB,mGAM7BjiB,0BACE,IAAIkiB,EAAiBhiB,KAAK6c,YAAYX,sBAClC+F,EAAQ7L,KAAKwI,MAAMoD,EAAiB,MACpCE,EAAUC,OAAO/L,KAAKwI,MAAMoD,EAAiB,IAAM,IAAII,SAAS,EAAG,KAGnE/jB,EAAO2B,KAAK6c,YAAYxe,KACxBgkB,EAAWxG,EAAoEG,iBAC/EsG,EAAazG,EAAoEa,YAIrF,yQAMwEuF,KAASC,uSAOhBG,MAhBhDhkB,IAASgkB,EAAY,UAAY,gZAyBeC,MAxB9CjkB,IAASikB,EAAc,UAAY,sTAkCxDxiB,2BAGE,0IAFiB,IAAIE,KAAK+gB,gBAAgBxJ,UAKjB/S,IAAI1B,GAAU9C,KAAKuiB,oBAAoBzf,IAASY,KAAK,sCAKhF5D,oBAAoBgD,GAClB,IAAI0f,EAAU,GAKd,OAJIxiB,KAAK6c,YAAYO,gBAAgBta,EAAO2L,MAC1C+T,EAAU,0GAM6BA,qBAA2B1f,EAAO2L,uCAC/CoE,EAASwC,eAAevS,EAAO2L,oCACnC3L,EAAO2f,mFAGhB3f,EAAOoT,wDAIxBpW,0BACE,IAAI4iB,EAAc,CAChB,4CACA,QACA,gBACA,+FACAhf,KAAK,IAEP,8JAIyCmP,EAASS,gBAAgBoP,yEAEpD1iB,KAAKib,mBAAmBzW,IAAIrC,GAAQnC,KAAK2iB,mBAAmBxgB,IAAOuB,KAAK,sCAKxF5D,mBAAmBoV,GACjB,IAAIsN,EAAUxiB,KAAK6c,YAAY+F,mBAAmB1N,GAAa,UAAY,GACvE2N,EAAgB7iB,KAAK6c,YAAYiG,iBAAiB5N,GAEtD,qGAEkEA,MAAcsN,iCACxD3P,EAASoC,UAAUC,2FAEkBA,mCAA2C2N,0BAI1G/iB,+BACE,IAAI4iB,EAAc,CAChB,qEACA,QACA,sFACAhf,KAAK,IAEP,8HAGsCmP,EAASS,gBAAgBoP,yEAEjD1iB,KAAKib,mBAAmBzW,IAAI,IAAM,qDAAqDd,KAAK,sCAK5G5D,iBACE,IAAK,IAAK3C,EAAGuhB,KAAU9gB,OAAO6E,QAAQzC,KAAK6c,YAAYT,YAAa,CAClE,IAAI2G,EAAS/iB,KAAK2hB,aAAaqB,GAAG7lB,GAClC,IAAK,IAAI+X,KAAawJ,EAAO,CAC3B,IAAK/F,EAAiBG,cAAc5D,GAClC,SAEF,IAAI+N,EAAazf,0DAA0D0R,WAAmBrC,EAASoC,UAAUC,QACjH6N,EAAOjD,OAAOmD,IAIlB,IAAIC,EAEJljB,KAAK2hB,aACFle,GAAG,WAAY,SAAUE,GACxBA,EAAEwf,mBAEH1f,GAAG,YAAa,SAAUE,GACzBH,EAAExD,MAAMojB,SAAS,mBAElB3f,GAAG,YAAa,SAAUE,GACzBH,EAAExD,MAAMqjB,YAAY,mBAErB5f,GAAG,OAAQ,SAAUE,GACpBA,EAAEwf,iBACF3f,EAAExD,MAAM8f,OAAOoD,GACf1f,EAAExD,MAAMqjB,YAAY,iBACpBC,MAGJtjB,KAAK2hB,aAAaL,KAAK,UACpB7d,GAAG,YAAa,SAAUE,GACzB,IAAI4f,EAAK5f,EAAE6f,cAAcC,aACzBP,EAAiB1f,EAAExD,MACnBujB,EAAGG,aAAaR,EAAeS,QAAQ,GAAI,EAAG,GAC9CJ,EAAGK,WAAa,OAChBV,EAAeE,SAAS,cAEzB3f,GAAG,UAAW,SAAUE,GACvBuf,EAAeG,YAAY,YAC3BH,EAAiB,OAGrB,IAAII,EAA8B,KAChC,IAAIO,EAAQC,IACZ9jB,KAAK6c,YAAYkH,cAAcF,IAG7BC,EAAsB,KACxB,IAAIE,EAAS,GAab,OAZAhkB,KAAK2hB,aAAa7C,KAAK,WACrB,IACImF,EADSzgB,EAAExD,MACMshB,KAAK,UAC1B,GAAI2C,EAAQ3f,OAAS,EACnB,OAEF,IAAIoa,EAAQ,GACZuF,EAAQnF,KAAK,WACXJ,EAAMtb,KAAKI,EAAExD,MAAMmH,KAAK,gBAE1B6c,EAAO5gB,KAAKsb,KAEPsF,GAIXlkB,YACE,IAAIokB,EAAQlkB,KAAK6c,YAEjB7c,KAAKqhB,gBAAgB5d,GAAG,SAAU,WAChC,IAAKzD,KAAKmkB,gBACR,OAEF,IAAK,CAAElC,EAAOC,GAAWliB,KAAK7B,MAAMimB,MAAM,eAEtC1N,EAAoC,KAAlBsE,SAASiH,GAAoC,GAApBjH,SAASkH,GACpDxL,EAAkB,KACpB1W,KAAKqkB,kBAAkB,4BAGvBrkB,KAAKqkB,kBAAkB,IAGzBH,EAAMI,kBAAkB5N,MAG1B1W,KAAKuhB,SAAS9d,GAAG,SAAU,WACzB,IAAI8gB,EAAU/gB,EAAExD,MAChBkkB,EAAMM,iBAAiBD,EAAQpd,KAAK,YAAaod,EAAQ3V,KAAK,cAGhE5O,KAAKwhB,OAAO/d,GAAG,SAAU,KACvB,IAAIpF,EAAO2B,KAAKwhB,OAAOtJ,OAAO,YAAYuM,MAC1CP,EAAMQ,QAAQrmB,KAGhB2B,KAAKyhB,eAAehe,GAAG,SAAU,WAC/B,IAAIkhB,EAAQnhB,EAAExD,MACdkkB,EAAMU,gBAAgBD,EAAMF,MAAOE,EAAM/V,KAAK,cAGhD5O,KAAK0hB,gBAAgBje,GAAG,QAAS,WAC/B,IAAKzD,KAAKmkB,gBACR,OAEF,IAAI7M,EAAQ0D,SAAShb,KAAK7B,QAAU,EACpC+lB,EAAMW,iBAAiB7kB,KAAK8kB,QAAQ5P,UAAWoC,MAOrD9B,EAAQ,w/EAkGR,IAAI9U,EAAiB3D,EAAoB,GAGzC,IAgBIgoB,EAAgBC,EAAgBjE,EAhBhCkE,EAAa,CAAEtjB,OAAQ,CAAC,CAACQ,KAAO,gBAAgB4I,aAAe,QAAQrI,UAAY,CAAC,CAACP,KAAO,mBAAmBkI,IAAM,iBAAiBlB,gBAAkB,4CAA6CC,kBAAoB,QAezN8b,GAAc,EAyGlB,SAASC,EAAkBC,GAAqB,GAC9C,IAAIjI,EAjhCN,SAA+B7D,GAC7B,IAAI+L,EAAY,GAOhB,OALA7hB,EAAE8V,GAASgI,KAAK,oBAAoBtU,IAAI,wCAAwC8R,KAAK,WACnF,IAAK,CAAErQ,GAAMjL,EAAExD,MAAMshB,KAAK,aAAa7L,IAAI,oBAAoB2O,MAAM,qBACrEiB,EAAUjiB,KAAK4X,SAASvM,MAGnB4W,EAygCeC,CAAsBrZ,UAE5C,IADAkR,EAAkB6H,EAAezH,sBAAsBJ,IACnC7Y,OAAS,EAI3B,YAHI8gB,GACFvZ,OAAO0Z,GAAGC,aAAa,+DAK3B,IAAIC,EAxiCN,SAAoCnM,GAClC,IAAIoM,EAAkB,IAAIxO,EAK1B,OAJA1T,EAAE8V,GAASgI,KAAK,oBAAoBxC,KAAK,WACvC,IAAI5J,EAAYlV,KAAK8kB,QAAQa,KAC7BD,EAAgBxQ,GAAa8F,SAAShb,KAAK8R,UAAUsS,MAAM,OAAO,MAE7DsB,EAkiCeE,CAA2B3Z,UACjD,IAAK+Y,EAAea,oBAAoBJ,GAItC,YAHIL,GACFvZ,OAAO0Z,GAAGC,aAAa,sDAK3B,IAAIM,EAAyBd,EAAee,aAAa5I,EAAiBsI,EAAiBV,GAEvFzP,EAAW6H,EAAgBA,EAAgB7Y,OAAS,GAC7CwhB,EAAuB/nB,IAAIuX,GAW1BwJ,KAAK,SAAU5J,EAAWoC,GACpC9T,uBAAuB0R,OACpBuP,IAAInN,GACJ1T,QAAQ,YATf,SAA0B0R,GACxB9R,EAAE,qBAAqB8R,EAAW,GAAG0Q,QALrCC,CAAiB3Q,GAuCnB,IAAI4Q,EAAiB,IAAIxlB,EAAuC,EAAE,IAQlEmL,OAAO+B,SAASuY,aAAa,CAC3B1X,GAAI,MACJ2X,IA7KFngB,kBA6CA,WACE,IAAIogB,EAAOpa,SAASqa,SAASC,KAC7B,OAAOF,EAAKhP,SAAS,iBAAmBgP,EAAKhP,SAAS,iBA9CjDmP,GA7vCP,SAAyB5jB,GACvB,IAAIyE,QAACA,EAAOof,OAAEA,EAAMC,WAAEA,EAAUC,UAAEA,EAAS9Q,YAAEA,GAAejT,EAI5D,GAHAyE,EAAUA,GAAW,iDACrBqf,EAAaA,GAAc,4BAC3BC,EAAYA,GAAa,IACpBF,EACH,MAAMpmB,MAAM,6BAGd,GAAIwV,GAAe3D,EAAWnU,IAAI6X,EAAQC,IAAc,GAGtD,OAFAhK,OAAO0Z,GAAGqB,sCAAsCF,sBAChDpW,WAAW,IAAMzE,OAAOgb,WAAWC,SAASL,EAAQE,GAAY,KAIlE,IAAII,EAAgB,CAClBve,KAAM,iBACNwX,SAAU,KACR,GAAInK,EAAa,CACf,IAAImR,EAAexjB,EAAE,mCAAmCoL,KAAK,WAC7DsD,EAAW6I,IAAInF,EAAQC,GAAcmR,GAEvCnb,OAAOgb,WAAWC,SAASL,EAAQE,IAErCM,SAAS,GAOXpb,OAAO0Z,GAAG2B,gBASZ,SAAsB7f,EAASzE,GAC7B,IAAIgF,EAAOP,EAOX,OANIzE,EAAQiT,cACVjO,GAAQ,uNAKHA,EAjBmBuf,CAAa9f,EAASzE,GAAU,CAACmkB,EALxC,CACjBve,KAAM,cACNwX,SAAU,SAG6E,6BAA6B,GAAM,GAixC5HoH,CAAgB,CACd/f,QAAS,qDACTof,OAAQ,QACRC,WAAY,oBACZC,UAAW,CACTtoB,KAAM,YAERwX,YAAa,cArDVqP,UASPjf,uBAxmDAA,uBACQW,QAAQygB,IAAI,CAChBlV,EAAWmV,gBACX9U,EAAY8U,gBACZ/U,EAAe+U,kBAqmDXC,GAEN,IAAIC,EAASnO,EAAqBpN,UAClC+Y,EAAiB,IAAIrI,EAA8C6K,EAAO5kB,QAAS4kB,EAAOvM,mBAAoBtC,GAC9GoM,EAAiByC,EAAOtM,WAExB,IAAIuM,EAAsBvV,EAAWnU,IAAI,sBACrC0pB,GACFzC,EAAenI,YAAY6K,OAAOD,GAEpCjkB,EAAEwhB,EAAenI,aAAapZ,GAAG,SAAU,WACzCyO,EAAW6I,IAAI,qBAAsBiK,EAAenI,YAAY8K,YAElE5G,EAAkByG,EAAO5kB,QAmC3B,WACE,IAAIglB,EAAYpkB,EAAE,uCACfiS,IAAI,CACHoS,SAAU,QACVC,WAAY,SAEbrkB,GAAG,QAAS,SAAUE,GACrBA,EAAEwf,iBAqBR,WACE,IAAI4E,EAAU5C,EAEd6C,OAAOC,KAAK,sCAAuC,SAAUC,GAC3D,IAAIC,EAAS,IAAIrH,EAAoDkE,EAAenI,YAAakE,EAAiBiE,EAAe/J,oBACjIkN,EAAOzS,SAASwS,IACfH,GA1BCK,KAGJ5kB,EAAE,kBAAkB8d,KAAK,MAAM0B,GAAG,GAAGlD,OAAO8H,GA7C5CS,GAiDF,WACE,IAAIC,EAAc9kB,EAAE,uMAEjBiS,IAAI,CACH8S,MAAO,QACPV,SAAU,WACVW,WAAY,WAGhBhlB,EAAE,kBAAkB8d,KAAK,MAAM0B,GAAG,GAAGlD,OAAOwI,GAxD5CG,GAEAjT,EAAQ,iIA4GV,SAAgCiC,GAC9B,IAAIwI,EAAW,IAAIC,iBAAiB,SAAUC,GAC5CA,EAAU1H,QAAQ,SAAU4H,GAC1B,IAAIqI,EAAqBllB,EAAE6c,EAASC,YAAYqI,GAAG,gBAC/CD,GACFjR,QAKNjU,EAAE,oBAAoBsb,KAAK,WACzBmB,EAASQ,QAAQzgB,KAAM,CACrB2gB,WAAW,EACXC,SAAS,MAlHbgI,CAAuB,IAAMzD,GAAkB,IAlCvC0D,GACN3D,GAAc,GAGhBC,MAmKA2D,gBATF,WAEE,OAAO5C,EAAe1nB,OADX,kCACwBymB,GAAY","file":"../ASS.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 8);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return DebugEvents; });\nconst DebugEvents = {\r\n  PHASE_COMPLETION_READY: 'phase_completion_ready',\r\n  PHASE_COMPLETION_NOT_READY: 'phase_completion_not_ready',\r\n  PHASE_CHANGED: 'phase_changed',\r\n  QUESTION_ANSWERED: 'question_answered',\r\n  QUESTION_NOT_ANSWERED: 'question_not_answered',\r\n  OPTION_VALUE_CHANGED: 'answer_value_changed',\r\n  BUG_REPORT_SUCCEEDED: 'bug_report_succeeded',\r\n  BUG_REPORT_FAILED: 'bug_report_failed',\r\n  USER_REJECTED: 'user_rejected'\r\n};\r\n\r\n\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Phase; });\nclass Phase {\r\n  constructor(phaseName) {\r\n    this.name = phaseName;\r\n    this.followsUpOn = null;\r\n    this.autoComplete = false;\r\n  }\r\n\r\n  setFollowsUpOn(thingToFollowUpOn) {\r\n    this.followsUpOn = thingToFollowUpOn;\r\n    return this;\r\n  }\r\n\r\n  setAutoComplete(auto) {\r\n    this.autoComplete = auto;\r\n    return this;\r\n  }\r\n\r\n  getType() {\r\n    throw Error('notimplemented');\r\n  }\r\n\r\n  start() {\r\n    throw Error('not implemented');\r\n  }\r\n\r\n  checkCompletionReady() {\r\n    throw Error('not implemented');\r\n  }\r\n\r\n  getThingsToFollowUpOn() {\r\n    throw Error('not implemented');\r\n  }\r\n\r\n  getSummary() {\r\n    throw Error('not implemented');\r\n  }\r\n\r\n}\r\n\r\n\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return PhaseTypes; });\nconst PhaseTypes = {\r\n  ATTEMPT: 'attempt',\r\n  QUESTION: 'question',\r\n  REPORT: 'report'\r\n};\r\n\r\n\r\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ProcessFactory; });\n/* harmony import */ var _src_Models_Debug_DebugProcess_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);\n/* harmony import */ var _src_Models_Debug_Build_PhaseFactory_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6);\n/* harmony import */ var _src_Models_Debug_BugReporter_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(7);\n/* harmony import */ var _src_Models_Debug_PhaseReport_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(5);\n\r\n\r\n\r\n\r\n\r\n\r\nfunction lazyEvalUsingParent(parentPhase) {\r\n  return (str) => {\r\n    return () => {\r\n      let parentResult = parentPhase.result;\r\n      return eval(str);\r\n    };\r\n  }\r\n}\r\n\r\n\r\nclass ProcessFactory {\r\n\r\n  constructor(actions) {\r\n    this.phaseFactory = new _src_Models_Debug_Build_PhaseFactory_js__WEBPACK_IMPORTED_MODULE_1__[/* PhaseFactory */ \"a\"](actions);\r\n  }\r\n\r\n  create(name, cfg, finishWithReport) {\r\n    let process = new _src_Models_Debug_DebugProcess_js__WEBPACK_IMPORTED_MODULE_0__[/* DebugProcess */ \"a\"](name);\r\n\r\n    for (let phaseCfg of cfg.phases) {\r\n      process.enqueuePhase(this.createPhase(phaseCfg));\r\n    }\r\n\r\n    if (finishWithReport) {\r\n      let bugReporter = new _src_Models_Debug_BugReporter_js__WEBPACK_IMPORTED_MODULE_2__[/* BugReporter */ \"a\"](process);\r\n      process.enqueuePhase(_src_Models_Debug_PhaseReport_js__WEBPACK_IMPORTED_MODULE_3__[/* PhaseReport */ \"a\"].create(bugReporter));\r\n    }\r\n\r\n    return process;\r\n  }\r\n\r\n  createPhase(cfg, lazyEval) {\r\n    let phase = this.phaseFactory.create(cfg, lazyEval);\r\n    this.addFollowUpPhasesForSuccess(phase, cfg);\r\n    this.addFollowUpPhasesForAnswers(phase, cfg);\r\n    return phase;\r\n  }\r\n\r\n  addFollowUpPhasesForSuccess(phase, cfg) {\r\n    if (cfg.type === 'PhaseAttempt' && cfg.success) {\r\n      for (let phaseCfg of cfg.success) {\r\n        let subPhase = this.createPhase(phaseCfg, lazyEvalUsingParent(phase));\r\n        phase.addSuccessFollowUp(subPhase);\r\n      }\r\n    }\r\n  }\r\n\r\n  addFollowUpPhasesForAnswers(phase, cfg) {\r\n    if (cfg.type !== 'PhaseQuestion') {\r\n      return;\r\n    }\r\n\r\n    for (let [q, questionCfg] of Object.entries(cfg.questions)) {\r\n      if (questionCfg.type !== 'QuestionSelect') {\r\n        continue;\r\n      }\r\n      for (let [o, optionCfg] of Object.entries(questionCfg.options)) {\r\n        if (optionCfg.followUp) {\r\n          for (let phaseCfg of optionCfg.followUp) {\r\n            let option = phase.questions[q].options[o];\r\n            let subPhase = this.createPhase(phaseCfg, lazyEvalUsingParent(phase))\r\n            option.addFollowUp(subPhase);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n};\r\n\r\n\r\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return DebugProcess; });\n/* harmony import */ var _src_Models_Debug_DebugEvents_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);\n\r\n\r\n\r\nclass DebugProcess {\r\n  constructor(processName) {\r\n    this.name = processName;\r\n    this.phases = [];\r\n    this.currentPhaseIndex = -1;\r\n  }\r\n\r\n  enqueuePhase(phase) {\r\n    this.phases.push(phase);\r\n    this.watchPhase(phase);\r\n    return this;\r\n  }\r\n\r\n  insertPhase(phase) {\r\n    this.phases.splice(this.currentPhaseIndex + 1, 0, phase);\r\n    this.watchPhase(phase);\r\n    return this;\r\n  }\r\n\r\n  watchPhase(phase) {\r\n    let events = [\r\n      _src_Models_Debug_DebugEvents_js__WEBPACK_IMPORTED_MODULE_0__[/* DebugEvents */ \"a\"].PHASE_COMPLETION_READY,\r\n      _src_Models_Debug_DebugEvents_js__WEBPACK_IMPORTED_MODULE_0__[/* DebugEvents */ \"a\"].PHASE_COMPLETION_NOT_READY,\r\n      _src_Models_Debug_DebugEvents_js__WEBPACK_IMPORTED_MODULE_0__[/* DebugEvents */ \"a\"].PHASE_CHANGED\r\n    ];\r\n\r\n    $(phase).on(events.join(' '), (e) => $(this).trigger(e.type, e));\r\n\r\n    $(phase).on(_src_Models_Debug_DebugEvents_js__WEBPACK_IMPORTED_MODULE_0__[/* DebugEvents */ \"a\"].PHASE_COMPLETION_READY, () => {\r\n      if (phase.autoComplete) {\r\n        this.goToNextPhase();\r\n      }\r\n    });\r\n  }\r\n\r\n  start() {\r\n    this.currentPhaseIndex = -1;\r\n    this.goToNextPhase();\r\n  }\r\n\r\n  goToNextPhase() {\r\n    if (this.currentPhaseIndex >= 0) {\r\n      for (let thing of this.getCurrentPhase().getThingsToFollowUpOn()) {\r\n        for (let phase of thing.followUpPhases) {\r\n          this.insertPhase(phase);\r\n        }\r\n      }\r\n    }\r\n    if (!this.hasNextPhase()) {\r\n      throw Error(`there's no next phase`);\r\n    }\r\n    this.currentPhaseIndex++;\r\n    $(this).trigger(_src_Models_Debug_DebugEvents_js__WEBPACK_IMPORTED_MODULE_0__[/* DebugEvents */ \"a\"].PHASE_CHANGED);\r\n    this.getCurrentPhase().checkCompletionReady();\r\n    this.getCurrentPhase().start();\r\n  }\r\n\r\n  hasNextPhase() {\r\n    return this.currentPhaseIndex < this.phases.length - 1;\r\n  }\r\n\r\n  getCurrentPhase() {\r\n    return this.phases[this.currentPhaseIndex];\r\n  }\r\n\r\n  getSummarySoFar() {\r\n    // everything before the current phase\r\n    return this.phases.slice(0, this.currentPhaseIndex)\r\n      .map(phase => phase.getSummary());\r\n  }\r\n\r\n  static create(processName) {\r\n    return new DebugProcess(processName);\r\n  }\r\n\r\n}\r\n\r\n\r\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return PhaseReport; });\n/* harmony import */ var _src_Models_Debug_Phase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);\n/* harmony import */ var _src_Models_Debug_DebugEvents_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(0);\n/* harmony import */ var _src_Models_Debug_PhaseTypes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);\n\r\n\r\n\r\n\r\n\r\nconst Status = {\r\n  SUCCESS: 'success',\r\n  FAIL: 'fail',\r\n  NOT_ATTEMPTED: 'not_attempted'\r\n};\r\n\r\n\r\nclass PhaseReport extends _src_Models_Debug_Phase_js__WEBPACK_IMPORTED_MODULE_0__[/* Phase */ \"a\"] {\r\n  constructor(bugReporter) {\r\n    super('send bug report');\r\n    this.bugReporter = bugReporter;\r\n    this.status = Status.NOT_ATTEMPTED;\r\n    this.error;\r\n  }\r\n\r\n  getType() {\r\n    return _src_Models_Debug_PhaseTypes_js__WEBPACK_IMPORTED_MODULE_2__[/* PhaseTypes */ \"a\"].REPORT;\r\n  }\r\n\r\n  start() {\r\n    let report = this.bugReporter.buildReport();\r\n    this.bugReporter.submitReport(report)\r\n      .then(d => {\r\n        this.status = Status.SUCCESS;\r\n        $(this).trigger({\r\n          type: _src_Models_Debug_DebugEvents_js__WEBPACK_IMPORTED_MODULE_1__[/* DebugEvents */ \"a\"].BUG_REPORT_SUCCEEDED,\r\n          url: d.html_url\r\n        })\r\n      })\r\n      .catch(error => {\r\n        this.error = error;\r\n        this.status = Status.FAIL;\r\n        $(this).trigger(_src_Models_Debug_DebugEvents_js__WEBPACK_IMPORTED_MODULE_1__[/* DebugEvents */ \"a\"].BUG_REPORT_FAILED)\r\n      })\r\n      .finally(() => this.checkCompletionReady());\r\n  }\r\n\r\n  checkCompletionReady() {\r\n    if (this.status !== Status.NOT_ATTEMPTED) {\r\n      $(this).trigger(_src_Models_Debug_DebugEvents_js__WEBPACK_IMPORTED_MODULE_1__[/* DebugEvents */ \"a\"].PHASE_COMPLETION_READY);\r\n    } else {\r\n      $(this).trigger(_src_Models_Debug_DebugEvents_js__WEBPACK_IMPORTED_MODULE_1__[/* DebugEvents */ \"a\"].PHASE_COMPLETION_NOT_READY);\r\n    }\r\n  }\r\n\r\n  getThingsToFollowUpOn() {\r\n    return [];\r\n  }\r\n\r\n  getSummary() {\r\n    return {\r\n      phaseName: this.name\r\n    };\r\n  }\r\n\r\n  static create(bugReporter) {\r\n    return new PhaseReport(bugReporter);\r\n  }\r\n}\r\n\r\n\r\n\r\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXTERNAL MODULE: ./src/Models/Debug/Phase.js\nvar Phase = __webpack_require__(1);\n\n// EXTERNAL MODULE: ./src/Models/Debug/DebugEvents.js\nvar DebugEvents = __webpack_require__(0);\n\n// EXTERNAL MODULE: ./src/Models/Debug/PhaseTypes.js\nvar PhaseTypes = __webpack_require__(2);\n\n// CONCATENATED MODULE: ./src/Models/Debug/PhaseAttempt.js\n\r\n\r\n\r\n\r\nconst Status = {\r\n  SUCCESS: 'success',\r\n  FAIL: 'fail',\r\n  NOT_ATTEMPTED: 'not_attempted'\r\n};\r\n\r\n\r\nclass PhaseAttempt_PhaseAttempt extends Phase[\"a\" /* Phase */] {\r\n  constructor(phaseName, asyncFunctionToAttempt) {\r\n    super(phaseName);\r\n    this.instructions;\r\n    this.attempt = asyncFunctionToAttempt;\r\n    this.success = async () => {\r\n    };\r\n    this.fail = async () => {\r\n    };\r\n    this.status = Status.NOT_ATTEMPTED;\r\n    this.autoComplete = true;\r\n    this._error;\r\n    this._result;\r\n    this.summarizeData = d => d;\r\n    this.ctrl = {};\r\n\r\n    this.successFollowUpPhases = [];\r\n  }\r\n\r\n  getType() {\r\n    return PhaseTypes[\"a\" /* PhaseTypes */].ATTEMPT;\r\n  }\r\n\r\n  get result() {\r\n    if (this.status === Status.NOT_ATTEMPTED) {\r\n      throw new Error('tried to get result before the attempt settled');\r\n    }\r\n    if (this.status === Status.FAIL) {\r\n      throw new Error(`tried to get result of an attempt that failed`);\r\n    }\r\n    return this._result;\r\n  }\r\n\r\n  async doAttempt() {\r\n    try {\r\n      let result = await this.abortableAttempt();\r\n      this.status = Status.SUCCESS;\r\n      this._result = result;\r\n      await this.success(result);\r\n    } catch (err) {\r\n      console.warn(err);\r\n      this.status = Status.FAIL;\r\n      this._error = err;\r\n      await this.fail(err);\r\n    }\r\n    this.checkCompletionReady();\r\n  }\r\n\r\n  async abortableAttempt() {\r\n    return new Promise(async (resolve, reject) => {\r\n      $(this.ctrl).on(DebugEvents[\"a\" /* DebugEvents */].USER_REJECTED, () => reject('user rejected'));\r\n      try {\r\n        let parentResult;\r\n        if (this.followsUpOn) {\r\n          parentResult = this.followsUpOn.result;\r\n        }\r\n        let result = await this.attempt(parentResult, this.ctrl);\r\n        resolve(result);\r\n      } catch (err) {\r\n        reject(err);\r\n      }\r\n    });\r\n  }\r\n\r\n  userAbort() {\r\n    $(this.ctrl).trigger(DebugEvents[\"a\" /* DebugEvents */].USER_REJECTED);\r\n  }\r\n\r\n  setInstructions(instructions) {\r\n    this.instructions = instructions;\r\n    return this;\r\n  }\r\n\r\n  setDataSummarizer(func) {\r\n    this.summarizeData = func;\r\n    return this;\r\n  }\r\n\r\n  onSuccess(cb) {\r\n    this.success = cb;\r\n    return this;\r\n  }\r\n\r\n  addSuccessFollowUp(phase) {\r\n    this.successFollowUpPhases.push(phase);\r\n    phase.setFollowsUpOn(this);\r\n    return this;\r\n  }\r\n\r\n  get followUpPhases() {\r\n    if (this.status === Status.SUCCESS) {\r\n      return this.successFollowUpPhases;\r\n    }\r\n    return [];\r\n  }\r\n\r\n  onFail(cb) {\r\n    this.fail = cb;\r\n    return this;\r\n  }\r\n\r\n  start() {\r\n    this.doAttempt();\r\n  }\r\n\r\n  checkCompletionReady() {\r\n    if (this.status !== Status.NOT_ATTEMPTED) {\r\n      $(this).trigger(DebugEvents[\"a\" /* DebugEvents */].PHASE_COMPLETION_READY);\r\n    } else {\r\n      $(this).trigger(DebugEvents[\"a\" /* DebugEvents */].PHASE_COMPLETION_NOT_READY);\r\n    }\r\n  }\r\n\r\n  getThingsToFollowUpOn() {\r\n    return [this];\r\n  }\r\n\r\n  getSummary() {\r\n    return {\r\n      phaseName: this.name,\r\n      status: this.status,\r\n      data: typeof this._result === 'undefined' ? this._result : this.summarizeData(this._result),\r\n      error: this.summarizeError()\r\n    }\r\n  }\r\n\r\n  summarizeError() {\r\n    let err = this._error;\r\n    if (!(err instanceof Error)) {\r\n      return err;\r\n    }\r\n    return {\r\n      message: err.message,\r\n      name: err.name,\r\n      extra: err.extra,\r\n      stack: err.stack\r\n    };\r\n  }\r\n\r\n  static create(phaseNum, functionToAttempt) {\r\n    return new PhaseAttempt_PhaseAttempt(phaseNum, functionToAttempt);\r\n  }\r\n\r\n}\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/Models/Debug/PhaseQuestion.js\n\r\n\r\n\r\n\r\n\r\nclass PhaseQuestion_PhaseQuestion extends Phase[\"a\" /* Phase */] {\r\n  constructor(phaseName) {\r\n    super(phaseName);\r\n    this.questions = [];\r\n    this._examinedHtml;\r\n  }\r\n\r\n  getType() {\r\n    return PhaseTypes[\"a\" /* PhaseTypes */].QUESTION;\r\n  }\r\n\r\n  lookAt(html) {\r\n    this._examinedHtml = html;\r\n    return this;\r\n  }\r\n\r\n  get examinedHtml() {\r\n    if (typeof this._examinedHtml === 'function') {\r\n      return this._examinedHtml();\r\n    }\r\n    return this._examinedHtml;\r\n  }\r\n\r\n  addQuestion(question) {\r\n    this.questions.push(question);\r\n    $(question).on(DebugEvents[\"a\" /* DebugEvents */].QUESTION_ANSWERED, () => {\r\n      this.checkCompletionReady();\r\n    });\r\n    $(question).on(DebugEvents[\"a\" /* DebugEvents */].QUESTION_NOT_ANSWERED, () => {\r\n      this.checkCompletionReady();\r\n    });\r\n    return this;\r\n  }\r\n\r\n  start() {\r\n    // do nothing;\r\n  }\r\n\r\n  checkCompletionReady() {\r\n    for (let question of this.questions) {\r\n      if (!question.isAnswered()) {\r\n        $(this).trigger(DebugEvents[\"a\" /* DebugEvents */].PHASE_COMPLETION_NOT_READY);\r\n        return;\r\n      }\r\n    }\r\n    $(this).trigger(DebugEvents[\"a\" /* DebugEvents */].PHASE_COMPLETION_READY);\r\n  }\r\n\r\n  getThingsToFollowUpOn() {\r\n    return this.questions.reduce((acc, question) => acc.concat(question.getThingsToFollowUpOn()), []);\r\n  }\r\n\r\n  getSummary() {\r\n    return {\r\n      phaseName: this.name,\r\n      questions: this.questions.map(question => question.getSummary())\r\n    };\r\n  }\r\n\r\n  static create(phaseName) {\r\n    return new PhaseQuestion_PhaseQuestion(phaseName);\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/Models/Debug/QuestionTypes.js\nconst QuestionTypes = {\r\n  VALUE: 'value',\r\n  FREE_FORM: 'free_form',\r\n  SELECT: 'select'\r\n};\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/Models/Debug/Question.js\n\r\n\r\n\r\nclass Question_Question {\r\n  constructor(text) {\r\n    this.text = text;\r\n    this.options = [];\r\n    this.selectedOptionIndex = null;\r\n  }\r\n\r\n  getType() {\r\n    throw Error('not implemented');\r\n  }\r\n\r\n  addOption(option) {\r\n    this.options.push(option);\r\n    return this;\r\n  }\r\n\r\n  setSelectedOption(index) {\r\n    this.selectedOptionIndex = index;\r\n    $(this).trigger(DebugEvents[\"a\" /* DebugEvents */].QUESTION_ANSWERED);\r\n    return this;\r\n  }\r\n\r\n  isAnswered() {\r\n    return this.selectedOptionIndex !== null;\r\n  }\r\n\r\n  getSelectedOption() {\r\n    return this.options[this.selectedOptionIndex];\r\n  }\r\n\r\n  getThingsToFollowUpOn() {\r\n    let option = this.getSelectedOption();\r\n    return (option.followUpPhases.length > 0) ? [option] : [];\r\n  }\r\n\r\n  getSummary() {\r\n    return {\r\n      question: this.text,\r\n      answer: this.getSelectedOption().value\r\n    };\r\n  }\r\n\r\n  static create(text) {\r\n    return new Question_Question(text);\r\n  }\r\n}\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/Models/Debug/QuestionSelect.js\n\r\n\r\n\r\n\r\nclass QuestionSelect_QuestionSelect extends Question_Question {\r\n  getType() {\r\n    return QuestionTypes.SELECT;\r\n  }\r\n\r\n  static create(text) {\r\n    return new QuestionSelect_QuestionSelect(text);\r\n  }\r\n}\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/Models/Debug/Option.js\n\r\n\r\n\r\nclass Option_Option {\r\n  constructor(humanText, value, className = '') {\r\n    this.text = humanText;\r\n    this.value = value;\r\n    this.className = className;\r\n    this.followUpPhases = [];\r\n  }\r\n\r\n  addFollowUp(phase) {\r\n    this.followUpPhases.push(phase);\r\n    phase.setFollowsUpOn(this);\r\n    return this;\r\n  }\r\n\r\n  setValue(value) {\r\n    this.value = value;\r\n    $(this).trigger(DebugEvents[\"a\" /* DebugEvents */].OPTION_VALUE_CHANGED);\r\n  }\r\n\r\n  static create(humanText, value, className) {\r\n    return new Option_Option(humanText, value, className);\r\n  }\r\n\r\n}\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/Models/Debug/QuestionFreeForm.js\n\r\n\r\n\r\n\r\n\r\n\r\nclass QuestionFreeForm_QuestionFreeForm extends Question_Question {\r\n\r\n  constructor(questionText, placeholderText, minResponseLength = 0) {\r\n    super(questionText);\r\n    this.minResponseLength = minResponseLength;\r\n    this.options = [\r\n      Option_Option.create(placeholderText, '', 'free-form')\r\n    ];\r\n    this.setSelectedOption(0);\r\n    this.watchSelectedOption();\r\n  }\r\n\r\n  getType() {\r\n    return QuestionTypes.FREE_FORM;\r\n  }\r\n\r\n  watchSelectedOption() {\r\n    $(this.getSelectedOption()).on(DebugEvents[\"a\" /* DebugEvents */].OPTION_VALUE_CHANGED, () => {\r\n      if (this.isAnswered()) {\r\n        $(this).trigger(DebugEvents[\"a\" /* DebugEvents */].QUESTION_ANSWERED);\r\n      } else {\r\n        $(this).trigger(DebugEvents[\"a\" /* DebugEvents */].QUESTION_NOT_ANSWERED);\r\n      }\r\n    });\r\n  }\r\n\r\n  isAnswered() {\r\n    return super.isAnswered() && this.options[0].value.length >= this.minResponseLength;\r\n  }\r\n\r\n  static create(questionText, placeholderText, minResponseLength) {\r\n    return new QuestionFreeForm_QuestionFreeForm(questionText, placeholderText, minResponseLength);\r\n  }\r\n\r\n}\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/Models/Debug/Correctness.js\nconst Correctness = {\r\n  CORRECT: 'correct',\r\n  INCORRECT: 'incorrect',\r\n  NOT_SURE: 'not_sure'\r\n}\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/Models/Debug/QuestionValue.js\n\r\n\r\n\r\n\r\n\r\n\r\nconst OPTION_INCORRECT = 1;\r\n\r\nclass QuestionValue_QuestionValue extends Question_Question {\r\n\r\n  constructor(questionText, valueQuestioned) {\r\n    super(questionText);\r\n    this._valueQuestioned = valueQuestioned;\r\n    this.options = [\r\n      Option_Option.create('Correct', Correctness.CORRECT, 'correct'),\r\n      Option_Option.create('Incorrect', Correctness.INCORRECT, 'incorrect'),\r\n      Option_Option.create('Not sure', Correctness.NOT_SURE, 'not-sure')\r\n    ];\r\n  }\r\n\r\n  get value() {\r\n    if (typeof this._valueQuestioned === 'function') {\r\n      return this._valueQuestioned();\r\n    }\r\n    return this._valueQuestioned;\r\n  }\r\n\r\n  getType() {\r\n    return QuestionTypes.VALUE;\r\n  }\r\n\r\n  addFollowUp(phase) {\r\n    this.options[OPTION_INCORRECT].addFollowUp(phase);\r\n    return this;\r\n  }\r\n\r\n  getSummary() {\r\n    return Object.assign(super.getSummary(), {\r\n      valueChecked: this.value\r\n    });\r\n  }\r\n\r\n  static create(questionText, valueQuestioned) {\r\n    return new QuestionValue_QuestionValue(questionText, valueQuestioned);\r\n  }\r\n}\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/Models/Debug/Build/QuestionFactory.js\n\r\n\r\n\r\n\r\n\r\n\r\nclass QuestionFactory_QuestionFactory {\r\n\r\n  create(cfg, lazyEval) {\r\n    switch (cfg.type) {\r\n      case 'QuestionFreeForm':\r\n        return this.createQuestionFreeForm(cfg);\r\n      case 'QuestionSelect':\r\n        return this.createQuestionSelect(cfg);\r\n      case 'QuestionValue':\r\n        return this.createQuestionValue(cfg, lazyEval);\r\n      default:\r\n        throw `unrecognized question type: ${cfg.type}`;\r\n    }\r\n  }\r\n\r\n  createQuestionFreeForm(cfg) {\r\n    let minResponseLength = cfg.minResponseLength || 0;\r\n    return QuestionFreeForm_QuestionFreeForm.create(cfg.ask, cfg.placeholderText, minResponseLength);\r\n  }\r\n\r\n  createQuestionSelect(cfg) {\r\n    let question = QuestionSelect_QuestionSelect.create(cfg.ask);\r\n\r\n    for (let optionCfg of cfg.options) {\r\n      question.addOption(Option_Option.create(optionCfg.answer, optionCfg.value));\r\n    }\r\n\r\n    return question;\r\n  }\r\n\r\n  createQuestionValue(cfg, lazyEval) {\r\n    let valueExamined = lazyEval(cfg.examine);\r\n    return QuestionValue_QuestionValue.create(cfg.ask, valueExamined);\r\n  }\r\n\r\n}\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/Models/Debug/Build/PhaseFactory.js\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return PhaseFactory_PhaseFactory; });\n\r\n\r\n\r\n\r\n\r\nclass PhaseFactory_PhaseFactory {\r\n\r\n  constructor(actions) {\r\n    this.actions = actions;\r\n    this.questionFactory = new QuestionFactory_QuestionFactory();\r\n  }\r\n\r\n  create(cfg, lazyEval) {\r\n    switch (cfg.type) {\r\n      case 'PhaseAttempt':\r\n        return this.createPhaseAttempt(cfg);\r\n      case 'PhaseQuestion':\r\n        return this.createPhaseQuestion(cfg, lazyEval);\r\n      case 'PhaseReport':\r\n        return this.createPhaseReport(cfg);\r\n      default:\r\n        throw Error(`unrecognized phase type ${cfg.type}`);\r\n    }\r\n  }\r\n\r\n  createPhaseAttempt(cfg) {\r\n    let action = this.actions[cfg.action];\r\n    if (typeof action === 'undefined') {\r\n      throw Error(`unrecognized action: ${cfg.action}`);\r\n    }\r\n\r\n    let phase = PhaseAttempt_PhaseAttempt.create(cfg.internalName, action.execute);\r\n\r\n    if (action.summarizeResult) {\r\n      phase.setDataSummarizer(action.summarizeResult);\r\n    }\r\n    if (cfg.instructions) {\r\n      phase.setInstructions(cfg.instructions);\r\n    }\r\n    return phase;\r\n  }\r\n\r\n  createPhaseQuestion(cfg, lazyEval) {\r\n    let phase = PhaseQuestion_PhaseQuestion.create(cfg.internalName);\r\n\r\n    if (cfg.lookAt) {\r\n      phase.lookAt(lazyEval(cfg.lookAt));\r\n    }\r\n\r\n    for (let questionCfg of cfg.questions) {\r\n      let question = this.questionFactory.create(questionCfg, lazyEval);\r\n      phase.addQuestion(question);\r\n    }\r\n\r\n    return phase;\r\n  }\r\n\r\n}\r\n\r\n\r\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// CONCATENATED MODULE: ./src/Models/Debug/DataCollector.js\nclass DataCollector {\r\n  constructor(debugProcess) {\r\n    this.process = debugProcess;\r\n    this.censoredProps = new Set(['csrf', 'birthdate']);\r\n  }\r\n\r\n  getCollectibleData() {\r\n    return this.scrub(this.buildData());\r\n  }\r\n\r\n  buildData() {\r\n    let nav = window.navigator;\r\n\r\n    return {\r\n      process: this.process.getSummarySoFar(),\r\n      contentHtml: document.getElementById('contentContainer').outerHTML,\r\n      navigator: {\r\n        appCodeName: nav.app,\r\n        appName: nav.appName,\r\n        appVersion: nav.appVersion,\r\n        platfrom: nav.platfrom,\r\n        userAgent: nav.userAgent,\r\n        languages: $.extend(true, [], nav.languages),\r\n        oscpu: nav.oscpu\r\n      },\r\n      gameData: $.extend(true, {}, window.game_data)\r\n    }\r\n  }\r\n\r\n  scrub(d) {\r\n    if (typeof d === 'object' && d !== null) {\r\n      for (let key of Object.keys(d)) {\r\n        if (this.censoredProps.has(key)) {\r\n          d[key] = 'CENSORED';\r\n        } else {\r\n          d[key] = this.scrub(d[key]);\r\n        }\r\n      }\r\n    }\r\n    if (typeof d === 'string') {\r\n      return this.censorCsrfInString(d);\r\n    }\r\n    return d;\r\n  }\r\n\r\n  censorCsrfInString(s) {\r\n    return s.replace(/((&|&amp;)h=)(\\w+)/g, '$1CENSORED')\r\n      .replace(/(\\?h=)(\\w+)(&|&amp;)/g, '$1CENSORED$3')\r\n      .replace(/(csrf_token = ')(\\w+)/g, '$1CENSORED')\r\n      .replace(/(\"csrf\":\")(\\w+)/g, '$1CENSORED');\r\n  }\r\n}\r\n\r\n\r\n\n// CONCATENATED MODULE: ./conf/API.js\nlet API = {\r\n    bugReport: {\r\n        url: 'https://56hqsw3c2c.execute-api.us-east-2.amazonaws.com/prod/bugreport'\r\n    }\r\n}\r\n\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/Models/Debug/BugReporter.js\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return BugReporter_BugReporter; });\n\r\n\r\n\r\nclass BugReporter_BugReporter {\r\n  constructor(process) {\r\n    this.process = process;\r\n  }\r\n\r\n  buildReport() {\r\n    return {\r\n      title: '[Bug report] ' + this.process.name,\r\n      dataCollected: (new DataCollector(this.process)).getCollectibleData()\r\n    }\r\n  }\r\n\r\n  async submitReport(report) {\r\n    let message = [\r\n      '|game version|world|player|twcheese|',\r\n      '|---|---|---|---|',\r\n      `|${game_data.majorVersion}|${game_data.world}|${game_data.player.name}|${window.TwCheese.version}|`,\r\n      '```' + JSON.stringify(report.dataCollected, null, 2) + '```'\r\n    ].join(\"\\n\");\r\n    return await this.createIssue(report.title, message);\r\n  }\r\n\r\n  async createIssue(title, message) {\r\n    let response = await fetch(API.bugReport.url, {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        title: title,\r\n        message: message\r\n      })\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to create issue. [${response.status}: ${response.statusText}]`);\r\n    }\r\n    return await response.json();\r\n  }\r\n\r\n}\r\n\r\n\r\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./src/Util/Object.js\nfunction getProp(object, propPath, defaultValue) {\r\n  let tokens = propPath.split('.');\r\n  for (let i = 0; i < tokens.length - 1; i++) {\r\n    let token = tokens[i];\r\n    if (typeof object[token] !== 'object' || token === null) {\r\n      return defaultValue;\r\n    }\r\n    object = object[token];\r\n  }\r\n  let value = object[tokens[tokens.length - 1]];\r\n  return (typeof value === 'undefined') ? defaultValue : value;\r\n}\r\n\r\n\r\nfunction setProp(object, propPath, value) {\r\n  let tokens = propPath.split('.');\r\n  for (let i = 0; i < tokens.length - 1; i++) {\r\n    let token = tokens[i];\r\n    if (typeof object[token] !== 'object' || token === null) {\r\n      object[token] = {};\r\n    }\r\n    object = object[token];\r\n  }\r\n  object[tokens[tokens.length - 1]] = value;\r\n}\r\n\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/Models/Config.js\n\r\n\r\n\r\nclass Config_Config {\r\n  constructor(id) {\r\n    this.id = id;\r\n    this.props = {};\r\n    this._loadCachedData();\r\n  }\r\n\r\n  get(prop, defaultValue) {\r\n    return getProp(this.props, prop, defaultValue);\r\n  }\r\n\r\n  set(prop, value) {\r\n    setProp(this.props, prop, value);\r\n    this._save();\r\n  }\r\n\r\n  initProps(props) {\r\n    this.props = props;\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   * @return {object|null}\r\n   */\r\n  _loadCachedData() {\r\n    let saved = window.localStorage.getItem(this.id);\r\n    if (saved) {\r\n      let data = JSON.parse(saved);\r\n\r\n      // should ideally be data.props\r\n      // But for backwards compatibility, the data could be the props too.\r\n      this.props = data.props || data;\r\n      return data;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * @final\r\n   * @protected\r\n   */\r\n  _save() {\r\n    this._beforeSave();\r\n    window.localStorage.setItem(this.id, JSON.stringify(this._getCacheableData()));\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  _beforeSave() {\r\n\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   * @return {object}\r\n   */\r\n  _getCacheableData() {\r\n    return {\r\n      props: this.props\r\n    };\r\n  }\r\n\r\n}\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/Models/RateLimiter.js\nclass RateLimiter {\r\n  constructor(maxBurstsPerSecond) {\r\n    this.maxBurstsPerSecond = maxBurstsPerSecond;\r\n    this.recentRequests = new Array(maxBurstsPerSecond);\r\n  }\r\n\r\n  requestWasMade() {\r\n    this.recentRequests.unshift(performance.now());\r\n    this.recentRequests.pop();\r\n  }\r\n\r\n  async sleepIfNeeded() {\r\n    let anchorTimestamp = this.recentRequests[this.maxBurstsPerSecond - 1];\r\n    if (typeof anchorTimestamp === 'undefined') {\r\n      return;\r\n    }\r\n    let delayMs = anchorTimestamp + 1000 - performance.now();\r\n    if (delayMs <= 0) {\r\n      return;\r\n    }\r\n    return new Promise(function (resolve, reject) {\r\n      setTimeout(resolve, delayMs);\r\n    });\r\n  }\r\n}\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/Util/Network.js\n\r\n\r\nlet throttle = new RateLimiter(5);\r\n\r\nlet originalFetch = window.fetch;\r\nwindow.fetch = function () {\r\n  throttle.requestWasMade();\r\n  return originalFetch.apply(this, arguments);\r\n};\r\n\r\n\r\n/**\r\n * requests the document from a url\r\n * @param {string} url the url of the page to get the document from\r\n * @return {Promise}\r\n * @resolve {HTMLDocment}\r\n */\r\nasync function requestDocument(url) {\r\n  await throttle.sleepIfNeeded();\r\n  let response = await fetch(url);\r\n  let responseText = await response.text();\r\n  let doc = (new DOMParser()).parseFromString(responseText, 'text/html');\r\n\r\n  Object.defineProperty(doc, 'URL', {\r\n    get: () => url\r\n  });\r\n\r\n  return doc;\r\n};\r\n\r\n\r\n/**\r\n * requests xml document from a url\r\n * @param {string} url the url of the page to get the cml document from\r\n * @return {Promise}\r\n * @resolve {XMLDocument}\r\n */\r\nasync function requestXml(url) {\r\n  await throttle.sleepIfNeeded();\r\n  let response = await fetch(url);\r\n  let responseText = await response.text();\r\n  let xmlDoc = (new DOMParser()).parseFromString(responseText, 'text/xml');\r\n\r\n  Object.defineProperty(xmlDoc, 'URL', {\r\n    get: () => url\r\n  });\r\n\r\n  return xmlDoc;\r\n};\r\n\r\n\r\n/**\r\n * make a POST request to the game\r\n * @param {string} screen\r\n * @param {object} uriParams\r\n * @param {object} data\r\n * @return {Promise}\r\n * @resolve {object} response data from the game\r\n */\r\nasync function postToGame(screen, uriParams, data) {\r\n  await throttle.sleepIfNeeded();\r\n  return new Promise(function (resolve, reject) {\r\n    window.TribalWars.post(screen, uriParams, data, resolve, reject);\r\n  });\r\n}\r\n\r\n\r\nfunction gameUrl(screen, uriParams, method = 'GET') {\r\n  return 'https://' + document.domain + window.TribalWars.buildURL(method, screen, uriParams);\r\n}\r\n\r\n\r\nfunction attackPrepUrl(unitCounts, targetVillageId, originVillageId = window.game_data.village.id) {\r\n  let uriParams = {\r\n    from: 'reports',\r\n    village: originVillageId,\r\n    target: targetVillageId\r\n  };\r\n  for (let [unitType, count] of Object.entries(unitCounts)) {\r\n    uriParams[unitType] = count;\r\n  }\r\n  return gameUrl('place', uriParams);\r\n}\r\n\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/Models/RemoteConfig.js\n\r\n\r\n\r\n\r\nfunction parseXmlNode(node) {\r\n  if (node.children.length === 0) {\r\n    return parseFloat(node.innerHTML) || null;\r\n  }\r\n  let object = {};\r\n  for (let childNode of node.children) {\r\n    object[childNode.tagName] = parseXmlNode(childNode);\r\n  }\r\n  return object;\r\n}\r\n\r\n\r\nclass RemoteConfig_RemoteConfig extends Config_Config {\r\n\r\n  /**\r\n   * @param {string} url\r\n   */\r\n  setUrl(url) {\r\n    this.url = url;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @param {number} seconds\r\n   */\r\n  setTtl(seconds) {\r\n    this.ttl = seconds * 1000;\r\n    return this;\r\n  }\r\n\r\n  async ensureUpdated() {\r\n    if (this.needsUpdate()) {\r\n      await this.update();\r\n    }\r\n  }\r\n\r\n  needsUpdate() {\r\n    let now = new Date().getTime();\r\n    let ttl = this.ttl || 86400;\r\n    return !this.timeUpdated || ttl < now - this.timeUpdated;\r\n  }\r\n\r\n  async update() {\r\n    let xmlDoc = await requestXml(this.url);\r\n    this._processXml(xmlDoc);\r\n    this._save();\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   * @param {XMLDocument} xmlDoc\r\n   */\r\n  _processXml(xmlDoc) {\r\n    this.props = parseXmlNode(xmlDoc).config;\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   * @return {object|null}\r\n   */\r\n  _loadCachedData() {\r\n    let data = super._loadCachedData();\r\n    if (data) {\r\n      this.timeUpdated = data.timeUpdated;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  _beforeSave() {\r\n    this.timeUpdated = new Date().getTime();\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   * @return {object}\r\n   */\r\n  _getCacheableData() {\r\n    return Object.assign({}, super._getCacheableData(), {\r\n      timeUpdated: this.timeUpdated\r\n    });\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/Util/Config.js\n\r\n\r\n\r\nlet userConfig = new Config_Config('twcheese.userConfig');\r\n\r\nlet gameConfig = (new RemoteConfig_RemoteConfig('twcheese.gameConfig'))\r\n  .setUrl(`https://${document.domain}/interface.php?func=get_config`)\r\n  .setTtl(8 * 3600);\r\n\r\nlet buildingConfig = (new RemoteConfig_RemoteConfig('twcheese.buildingConfig'))\r\n  .setUrl(`https://${document.domain}/interface.php?func=get_building_info`)\r\n  .setTtl(8 * 3600);\r\n\r\nlet troopConfig = (new RemoteConfig_RemoteConfig('twcheese.troopConfig'))\r\n  .setUrl(`https://${document.domain}/interface.php?func=get_unit_info`)\r\n  .setTtl(8 * 3600);\r\n\r\n\r\nasync function ensureRemoteConfigsUpdated() {\r\n  await Promise.all([\r\n    gameConfig.ensureUpdated(),\r\n    troopConfig.ensureUpdated(),\r\n    buildingConfig.ensureUpdated()\r\n  ]);\r\n}\r\n\r\n\r\n\r\n\n// CONCATENATED MODULE: ./conf/ImageSrc.js\nlet game = window.image_base;\r\nlet ImageSrc_self = window.TwCheese.ROOT + '/assets/images/';\r\n\r\nlet ImageSrc = {\r\n    plus: game + 'plus.png',\r\n    minus: game + 'minus.png',\r\n    wood: game + 'holz.png',\r\n    stone: game + 'lehm.png',\r\n    iron: game + 'eisen.png',\r\n    attack: game + 'command/attack.png',\r\n    haulPartial: game + 'max_loot/0.png',\r\n    haulFull: game + 'max_loot/1.png',\r\n    info: game + 'questionmark.png',\r\n    attackSentViaFa: game + 'command/farm.png',\r\n    attackSizeSmall: game + 'command/attack_small.png',\r\n    attackSizeMedium: game + 'command/attack_medium.png',\r\n    attackSizeLarge: game + 'command/attack_large.png',\r\n    attackContainsSnob: game + 'command/snob.png',\r\n    attackContainsSpy: game + 'command/spy.png',\r\n    attackContainsKnight: game + 'command/knight.png',\r\n    popupBackground: game + 'popup/content_background.png',\r\n    popupBorder: game + 'popup/border.png',\r\n    servant: game + 'paladin_new.png',\r\n    loadingSpinner: game + 'throbber.gif',\r\n    calendar: ImageSrc_self + 'calendar.png',\r\n    sidebarMain: ImageSrc_self + 'sidebar/gear.png',\r\n    sidebarBug: ImageSrc_self + 'sidebar/bug.png',\r\n    sidebarGithub: ImageSrc_self + 'sidebar/github.png',\r\n    jq: {\r\n        blue: ImageSrc_self + 'jquery/ui-icons_2e83ff_256x240.png',\r\n        black: ImageSrc_self + 'jquery/ui-icons_222222_256x240.png',\r\n        darkGrey: ImageSrc_self + 'jquery/ui-icons_454545_256x240.png',\r\n        grey: ImageSrc_self + 'jquery/ui-icons_888888_256x240.png',\r\n        red: ImageSrc_self + 'jquery/ui-icons_cd0a0a_256x240.png'\r\n    },\r\n    legacy: {\r\n        helpBackground: ImageSrc_self + 'legacy/help_background.png',\r\n        helpBackgroundBright: ImageSrc_self + 'legacy/help_background_highlight.png'\r\n    },    \r\n    buildingIcon: buildingType => game + `buildings/${buildingType}.png`,\r\n    troopIcon: troopType => game + `unit/unit_${troopType}.png`,\r\n    dotIcon: color => game + `dots/${color}.png`,\r\n    scavengeOption: optionId => game + `scavenging/options/${optionId}.png`,\r\n};\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/Util/UI.js\n\r\n\r\n\r\nfunction escapeHtml(text) {\r\n  if (typeof text !== 'string') {\r\n    text = String(text);\r\n  }\r\n  // https://stackoverflow.com/a/4835406\r\n  var map = {\r\n    '&': '&amp;',\r\n    '<': '&lt;',\r\n    '>': '&gt;',\r\n    '\"': '&quot;',\r\n    \"'\": '&#039;'\r\n  };\r\n  return text.replace(/[&<>\"']/g, function (m) {\r\n    return map[m];\r\n  });\r\n}\r\n\r\n////// css //////\r\n\r\nlet cssInitd = new Set();\r\n\r\nfunction initCss(css) {\r\n  if (cssInitd.has(css)) {\r\n    return;\r\n  }\r\n  $(`<style>${css}</style>`).appendTo('head');\r\n  cssInitd.add(css);\r\n}\r\n\r\ninitCss(`\r\n    .twcheese-popup {\r\n        z-index: 13000;\r\n        display: block;\r\n        position: fixed;\r\n        top: 60px;\r\n        border: 19px solid #804000;\r\n        border-image: url(${ImageSrc.popupBorder}) 19 19 19 19 repeat;\r\n        left: 50%;\r\n        -webkit-transform: translateX(-50%);\r\n        transform: translateX(-50%);\r\n    }\r\n`);\r\n\r\n//////// faders ///////////\r\n\r\n\r\nfunction fadeGameContent() {\r\n  $('body').append('<div id=\"fader\" class=\"fader\">');\r\n};\r\n\r\n\r\nfunction unfadeGameContent() {\r\n  $('#fader').remove();\r\n  $('.twcheese-fader').remove();\r\n}\r\n\r\n\r\nfunction fadeGameContentExcept(el) {\r\n  let $el = $(el);\r\n\r\n  if ($el.length < 1) {\r\n    throw new Error('element does not exist');\r\n  }\r\n  if ($el.length > 1) {\r\n    throw new Error('expected exactly one element, got more');\r\n  }\r\n\r\n  let $faderLeft = spawnFader();\r\n  let $faderRight = spawnFader();\r\n  let $faderTopMenu = spawnFader();\r\n  let $faderTopScreen = spawnFader();\r\n  let $faderBottomScreen = spawnFader();\r\n  let $faderBottomMenu = spawnFader();\r\n\r\n  var $bottomMenu = $('#footer');\r\n  var $topMenu = $('#topContainer');\r\n  var topMenuHeight, screenWidth, screenHeight;\r\n\r\n  function updateMeasurements() {\r\n    topMenuHeight = $topMenu.outerHeight() + 3;\r\n    screenWidth = $('body').outerWidth();\r\n    screenHeight = Math.max($('#ds_body')[0].scrollHeight, document.documentElement.clientHeight);\r\n  }\r\n\r\n  function updateFaders() {\r\n    updateMeasurements();\r\n    updateFaderLeft();\r\n    updateFaderRight();\r\n    updateFaderTopMenu();\r\n    updateFaderTopScreen();\r\n    updateFaderBottomScreen();\r\n    updateFaderBottomMenu();\r\n  }\r\n\r\n\r\n  function updateFaderLeft() {\r\n    let offset = $el.offset();\r\n    $faderLeft.css({\r\n      top: 0,\r\n      left: 0,\r\n      width: offset.left,\r\n      height: screenHeight\r\n    });\r\n  }\r\n\r\n\r\n  function updateFaderRight() {\r\n    let offset = $el.offset();\r\n    $faderRight.css({\r\n      top: 0,\r\n      right: 0,\r\n      width: screenWidth - $el.outerWidth() - offset.left,\r\n      height: screenHeight\r\n    });\r\n  }\r\n\r\n\r\n  function updateFaderTopScreen() {\r\n    let offset = $el.offset();\r\n    $faderTopScreen.css({\r\n      top: topMenuHeight,\r\n      left: offset.left,\r\n      height: offset.top - topMenuHeight,\r\n      width: $el.outerWidth(),\r\n      zIndex: $('.top_bar').zIndex() - 1\r\n    });\r\n  }\r\n\r\n\r\n  function updateFaderBottomScreen() {\r\n    let offset = $el.offset();\r\n    $faderBottomScreen.css({\r\n      top: offset.top + $el.outerHeight(),\r\n      left: offset.left,\r\n      height: screenHeight - offset.top - $el.outerHeight(),\r\n      width: $el.outerWidth(),\r\n      zIndex: $bottomMenu.zIndex() - 1\r\n    });\r\n  }\r\n\r\n\r\n  function updateFaderTopMenu() {\r\n    let offset = $el.offset();\r\n    $faderTopMenu.css({\r\n      position: 'fixed',\r\n      top: 0,\r\n      left: offset.left,\r\n      height: topMenuHeight,\r\n      width: $el.outerWidth()\r\n    });\r\n  }\r\n\r\n\r\n  function updateFaderBottomMenu() {\r\n    let offset = $el.offset();\r\n    $faderBottomMenu.css({\r\n      position: 'fixed',\r\n      bottom: 0,\r\n      left: offset.left,\r\n      height: $bottomMenu.outerHeight(),\r\n      width: $el.outerWidth()\r\n    });\r\n  }\r\n\r\n\r\n  function spawnFader() {\r\n    let css = {\r\n      position: 'absolute',\r\n      background: 'black',\r\n      opacity: 0.5,\r\n      zIndex: 12000\r\n    };\r\n    return $('<div class=\"twcheese-fader\"></div>').css(css).appendTo($('body'));\r\n  }\r\n\r\n  updateFaders();\r\n  $(window).on('resize', updateFaders);\r\n}\r\n\r\n\r\n// mousetrap ///////////////////////////////\r\n\r\nlet mouseEvents = ['click', 'mousemove', 'mousenter', 'mouseleave', 'mouseover', 'mouseout', 'mousedown', 'mouseup'];\r\nlet mouseBubbleEvents = new Set(['click', 'mousemove', 'mouseover', 'mouseout', 'mousedown', 'mouseup']);\r\nlet mouseEventsNeedSpecial = new Set(['mousenter', 'mouseleave', 'mouseover', 'mouseout']);\r\n\r\nclass Mousetrap {\r\n  constructor() {\r\n    this.$trap = $('<div class=\"twcheese-mousetrap\">').css({\r\n      position: 'fixed',\r\n      top: 0,\r\n      left: 0,\r\n      width: '100%',\r\n      height: '100%',\r\n      background: 'cyan',\r\n      opacity: 0.001,\r\n      zIndex: 12000\r\n    })\r\n    this.prevIntendedTarget;\r\n\r\n    this.watchers = {\r\n      // example:\r\n      // click: [{$elements, handler}, {$elements, handler}]\r\n      mouseout: []\r\n    }\r\n\r\n    this.setupHandling();\r\n  }\r\n\r\n  spawn() {\r\n    this.$trap.appendTo('body');\r\n    return this;\r\n  }\r\n\r\n  destruct() {\r\n    this.$trap.remove();\r\n  }\r\n\r\n  setupHandling() {\r\n    let trapEvents = mouseEvents.filter(name => !mouseEventsNeedSpecial.has(name));\r\n\r\n    this.$trap.on(trapEvents.join(' '), (e) => {\r\n      this.$trap.hide();\r\n      let intendedTarget = document.elementFromPoint(e.offsetX, e.offsetY);\r\n      this.$trap.show();\r\n\r\n      this.notifyWatchers(e.type, e, intendedTarget);\r\n\r\n      if (e.type === 'mousemove' && intendedTarget !== this.prevIntendedTarget) {\r\n        this.notifyWatchers('mousenter', e, intendedTarget);\r\n        this.notifyWatchers('mouseleave', e, this.prevIntendedTarget);\r\n        this.notifyWatchers('mouseover', e, intendedTarget);\r\n\r\n        // mouseout\r\n        for (let watcher of this.watchers.mouseout) {\r\n          watcher.$elements.each((i, el) => {\r\n            if (\r\n              this.doesElMatch(el, 'mouseover', this.prevIntendedTarget)\r\n              && !this.doesElMatch(el, 'mouseover', intendedTarget)\r\n            ) {\r\n              watcher.handler.call(el, e);\r\n            }\r\n          });\r\n        }\r\n      }\r\n\r\n      this.prevIntendedTarget = intendedTarget;\r\n    });\r\n  }\r\n\r\n  notifyWatchers(eventName, e, intendedTarget) {\r\n    if (typeof this.watchers[eventName] === 'undefined') {\r\n      return;\r\n    }\r\n    for (let watcher of this.watchers[eventName]) {\r\n      watcher.$elements.each((i, el) => {\r\n        if (this.doesElMatch(el, eventName, intendedTarget)) {\r\n          watcher.handler.call(el, e);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  doesElMatch(el, eventName, intendedTarget) {\r\n    return el === intendedTarget\r\n      || (mouseBubbleEvents.has(eventName) && $.contains(el, intendedTarget));\r\n  }\r\n\r\n  on(eventName, $elements, handler) {\r\n    if (typeof this.watchers[eventName] === 'undefined') {\r\n      this.watchers[eventName] = [];\r\n    }\r\n    this.watchers[eventName].push({$elements, handler});\r\n    return this;\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/Prompt/suggestRedirect.js\n\r\n\r\n\r\n\r\nfunction suggestRedirect(options) {\r\n  let {message, screen, screenName, uriParams, skippableId} = options;\r\n  message = message || '{{Some genius forgot to write a message here}}';\r\n  screenName = screenName || '{{Screen Name goes here}}';\r\n  uriParams = uriParams || {};\r\n  if (!screen) {\r\n    throw Error('screen must be specified!');\r\n  }\r\n\r\n  if (skippableId && userConfig.get(skipKey(skippableId), false)) {\r\n    window.UI.InfoMessage(`Redirecting to <strong>${screenName}</strong>...`);\r\n    setTimeout(() => window.TribalWars.redirect(screen, uriParams), 200);\r\n    return;\r\n  }\r\n\r\n  let buttonConfirm = {\r\n    text: 'Take me there!',\r\n    callback: () => {\r\n      if (skippableId) {\r\n        let skipNextTime = $('#twcheese-suggest-redirect-skip').prop('checked');\r\n        userConfig.set(skipKey(skippableId), skipNextTime);\r\n      }\r\n      window.TribalWars.redirect(screen, uriParams);\r\n    },\r\n    confirm: true\r\n  };\r\n  let buttonCancel = {\r\n    text: 'Whatever...',\r\n    callback: () => {\r\n    }\r\n  };\r\n  window.UI.ConfirmationBox(buildContent(message, options), [buttonConfirm, buttonCancel], 'twcheese_suggest_redirect', true, true);\r\n}\r\n\r\n\r\nfunction skipKey(skippableId) {\r\n  return 'suggestRedirect.skip.' + skippableId;\r\n}\r\n\r\n\r\nfunction buildContent(message, options) {\r\n  let html = message;\r\n  if (options.skippableId) {\r\n    html += `<div class=\"twcheese-suggest-redirect-skip-container\">\r\n            <input id=\"twcheese-suggest-redirect-skip\" type=\"checkbox\">\r\n            <span>Don't ask, just take me there next time.</span>\r\n        </div>`\r\n  }\r\n  return html;\r\n}\r\n\r\n\r\ninitCss(`\r\n    .twcheese-suggest-redirect-skip-container {\r\n        margin-top: 20px;\r\n        font-size: 10px;\r\n    }\r\n\r\n    .twcheese-suggest-redirect-skip-container > * {\r\n        vertical-align: middle;\r\n    }\r\n`);\r\n\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/Models/ScavengeOption.js\nclass ScavengeOption {\r\n\r\n  constructor(base) {\r\n    this.base = base;\r\n    this.id = base.id;\r\n  }\r\n\r\n  getName() {\r\n    return this.base.name;\r\n  }\r\n\r\n  getLootPercent() {\r\n    return this.base.loot_factor * 100;\r\n  }\r\n\r\n  getLootFactor() {\r\n    return this.base.loot_factor;\r\n  }\r\n\r\n  calcDurationSeconds(squadCapacity) {\r\n    let base = (squadCapacity ** 2) * this.getLootPercent() * this.base.loot_factor;\r\n    let preDuration = Math.pow(base, this.base.duration_exponent) + this.base.duration_initial_seconds\r\n    return Math.round(preDuration * this.base.duration_factor);\r\n  }\r\n\r\n  calcTargetCapacity(durationSeconds) {\r\n    let preDuration = durationSeconds / this.base.duration_factor;\r\n    let base = (preDuration - this.base.duration_initial_seconds) ** (1 / this.base.duration_exponent);\r\n    return Math.round(Math.sqrt(base / this.getLootPercent() / this.base.loot_factor));\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/Models/Troops.js\n\r\n\r\nlet Troops_troopTypes = ['spear', 'sword', 'axe', 'archer', 'spy', 'light', 'marcher', 'heavy', 'ram', 'catapult', 'knight', 'snob', 'militia'];\r\n\r\n\r\nfunction troopPop(troopType) {\r\n  let troop = troopConfig.get(troopType);\r\n  if (typeof troop === 'undefined') {\r\n    return 0;\r\n  }\r\n  return troop.pop;\r\n}\r\n\r\n\r\nfunction travelMinutes(troopType) {\r\n  let troop = troopConfig.get(troopType);\r\n  if (typeof troop === 'undefined') {\r\n    return 0;\r\n  }\r\n  return troop.speed;\r\n}\r\n\r\n\r\nfunction troopCarry(troopType) {\r\n  let troop = troopConfig.get(troopType);\r\n  if (typeof troop === 'undefined') {\r\n    return 0;\r\n  }\r\n  return troop.carry;\r\n}\r\n\r\n\r\nclass TroopCounts {\r\n  constructor() {\r\n    for (let type of Troops_troopTypes) {\r\n      this[type] = 0;\r\n    }\r\n  }\r\n\r\n  clone() {\r\n    return Object.assign(new TroopCounts(), this);\r\n  }\r\n\r\n  filter(allowedTroopTypes) {\r\n    let counts = new TroopCounts();\r\n    for (let type of Troops_troopTypes) {\r\n      if (allowedTroopTypes.includes(type)) {\r\n        counts[type] = this[type];\r\n      }\r\n    }\r\n    return counts;\r\n  }\r\n\r\n  isZero() {\r\n    for (let count of Object.values(this)) {\r\n      if (count !== 0) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  sum() {\r\n    let sum = 0;\r\n    for (let count of Object.values(this)) {\r\n      sum += count;\r\n    }\r\n    return sum;\r\n  }\r\n\r\n  /**\r\n   * @param {function} doSomething - receives two params: troopType and count\r\n   */\r\n  each(doSomething) {\r\n    for (let type of Troops_troopTypes) {\r\n      let count = this[type];\r\n      doSomething(type, count);\r\n    }\r\n  }\r\n\r\n  carryCapacity() {\r\n    let capacity = 0;\r\n    for (let type of Troops_troopTypes) {\r\n      capacity += this[type] * troopCarry(type);\r\n    }\r\n    return capacity;\r\n  }\r\n\r\n  populationUsed() {\r\n    return Troops_troopTypes.reduce((sum, type) => sum + troopPop(type) * this[type], 0);\r\n  }\r\n\r\n  travelDuration(distance, role = 'attack') {\r\n    let minutesPerField = this.travelMinutesPerField(role);\r\n    return calcTravelDuration(minutesPerField, distance);\r\n  }\r\n\r\n  travelMinutesPerField(role = 'attack') {\r\n    if (role === 'support' && this.knight > 0) {\r\n      return travelMinutes('knight');\r\n    }\r\n\r\n    let relevantMinutes = Troops_troopTypes\r\n      .filter(type => this[type] > 0)\r\n      .map(type => travelMinutes(type));\r\n\r\n    return Math.max(...relevantMinutes);\r\n  }\r\n\r\n  /**\r\n   * @param {TroopCounts} subtrahend\r\n   * @return {TroopCounts} difference\r\n   */\r\n  subtract(subtrahend) {\r\n    let difference = new TroopCounts();\r\n    for (let [troopType, count] of Object.entries(this)) {\r\n      difference[troopType] = count - subtrahend[troopType];\r\n    }\r\n    return difference;\r\n  }\r\n\r\n  /**\r\n   * get new TroopCounts, like this one but with any negative counts set to 0\r\n   */\r\n  zeroNegatives() {\r\n    let troopCounts = new TroopCounts();\r\n    for (let [troopType, count] of Object.entries(this)) {\r\n      troopCounts[troopType] = Math.max(0, count);\r\n    }\r\n    return troopCounts;\r\n  }\r\n\r\n  toArray() {\r\n    return Troops_troopTypes.map(type => this[type]);\r\n  }\r\n\r\n  static fromArray(array) {\r\n    let troops = new TroopCounts();\r\n    array.forEach((count, i) => {\r\n      troops[Troops_troopTypes[i]] = count;\r\n    });\r\n    return troops;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n *  @param {number} distance\r\n *  @return  {{spear:number, sword:number, ...}} milliseconds\r\n */\r\nfunction calcTravelDurations(distance) {\r\n  let travelTimes = {};\r\n  for (let type of Troops_troopTypes) {\r\n    travelTimes[type] = calcTravelDuration(travelMinutes(type), distance);\r\n  }\r\n  return travelTimes;\r\n};\r\n\r\n\r\nfunction calcTravelDuration(minutesPerField, distance) {\r\n  // The game rounds travel duration to the nearest second.\r\n  // The milliseconds part of the scheduled arrival is NOT some fraction of travel seconds.\r\n  // But rather, copied from the clock when the server started processing the request to travel.\r\n  //\r\n  // e.g. The clock says its 12:30:00.123.\r\n  // The server processes a request for troops to travel somewhere that takes them 10 minutes to reach.\r\n  // The scheduled arrival will be 12:40:00.123\r\n  return Math.round(distance * minutesPerField * 60) * 1000;\r\n}\r\n\r\n\r\nlet Troops_troopUtil = {\r\n\r\n  troopTypesOnWorld() {\r\n    return window.game_data.units;\r\n  },\r\n\r\n  existsOnWorld(troopType) {\r\n    return typeof troopConfig.get(troopType) !== 'undefined';\r\n  },\r\n\r\n  /**\r\n   * @param {string} troopType\r\n   * @param {number} resourceAmount\r\n   * @param {number} haulBonus the extra % bonus haul from flags, events, etc. Example: 30 for 30%, NOT 0.3\r\n   * @return {number} how many troops does it take to carry all the resources\r\n   */\r\n  countToCarry(troopType, resourceAmount, haulBonus = 0) {\r\n    let haulPerUnit = troopCarry(troopType) * (100 + haulBonus) / 100;\r\n    let troopCount = resourceAmount / haulPerUnit;\r\n    return Math.round(10 * troopCount) / 10;\r\n  },\r\n\r\n  carryCapacity(troopType, factor = 1.0) {\r\n    return troopCarry(troopType) * factor;\r\n  },\r\n\r\n  /**\r\n   * @param {string} troopType\r\n   * @param {number} distance\r\n   * @return {number} milliseconds to travel\r\n   */\r\n  travelDuration(troopType, distance) {\r\n    return calcTravelDuration(travelMinutes(troopType), distance);\r\n  }\r\n\r\n};\r\n\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/Scrape/scavenge.js\n\r\n\r\n\r\n\r\n/**\r\n * @param {HTMLDocument} gameDoc\r\n * @return {TroopCounts}\r\n */\r\nfunction scrapeAvailableTroopCounts(gameDoc) {\r\n  let availableCounts = new TroopCounts();\r\n  $(gameDoc).find('.units-entry-all').each(function () {\r\n    let troopType = this.dataset.unit;\r\n    availableCounts[troopType] = parseInt(this.innerHTML.match(/\\d+/)[0]);\r\n  });\r\n  return availableCounts;\r\n}\r\n\r\n\r\n/**\r\n * @param {HTMLDocument} gameDoc\r\n * @return {int[]}\r\n */\r\nfunction scrapeUsableOptionIds(gameDoc) {\r\n  let usableIds = [];\r\n\r\n  $(gameDoc).find('.scavenge-option').has('.free_send_button:not(.btn-disabled)').each(function () {\r\n    let [, id] = $(this).find('.portrait').css('background-image').match(/options\\/(\\d).png/);\r\n    usableIds.push(parseInt(id));\r\n  });\r\n\r\n  return usableIds;\r\n}\r\n\r\n\r\n/**\r\n * @param {HTMLDocument} gameDoc\r\n * @return {object}\r\n */\r\nfunction scrapeScavengeModels(gameDoc) {\r\n  let data = scrapeScavengeData(gameDoc);\r\n  let optionBases = data.optionsConfig;\r\n\r\n  let options = new Map();\r\n  for (let optionId of Object.keys(optionBases)) {\r\n    options.set(parseInt(optionId), new ScavengeOption(optionBases[optionId]));\r\n  }\r\n\r\n  return {\r\n    options,\r\n    sendableTroopTypes: Object.keys(data.troops),\r\n    haulFactor: data.village.unit_carry_factor\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * @param {HTMLDocument} gameDoc\r\n */\r\nfunction scrapeScavengeData(gameDoc) {\r\n  let jsCode = findScavengeScreenJsCode(gameDoc);\r\n\r\n  let paramCode = findScavengeScreenParamCode(jsCode);\r\n  let dataFromParams = parseScavengeScreenParamCode(paramCode);\r\n\r\n  let villageCode = findVillageCode(jsCode);\r\n\r\n  return {\r\n    optionsConfig: dataFromParams.optionsConfig,\r\n    troops: dataFromParams.troops,\r\n    village: JSON.parse(villageCode)\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * @param {HTMLDocument} gameDoc\r\n */\r\nfunction findScavengeScreenJsCode(gameDoc) {\r\n  let scripts = gameDoc.getElementsByTagName('script');\r\n\r\n  for (let script of scripts) {\r\n    let code = script.innerHTML;\r\n    if (code.includes('new ScavengeScreen')) {\r\n      return code;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {string} jsCode\r\n * @return {string}\r\n */\r\nfunction findScavengeScreenParamCode(jsCode) {\r\n  let search = 'new ScavengeScreen';\r\n  let startIndex = jsCode.indexOf(search) + search.length;\r\n  return wrappedCode(jsCode, startIndex, '(', ')');\r\n}\r\n\r\n\r\n/**\r\n * @param {string} paramCode\r\n */\r\nfunction parseScavengeScreenParamCode(paramCode) {\r\n  let optionsConfigStartIndex = paramCode.indexOf('{');\r\n  let optionsConfigCode = wrappedCode(paramCode, optionsConfigStartIndex, '{', '}');\r\n\r\n  let troopsCode;\r\n  let troopsStartIndex = optionsConfigStartIndex + optionsConfigCode.length;\r\n  for (; troopsStartIndex < paramCode.length; troopsStartIndex++) {\r\n    if (paramCode[troopsStartIndex] === '{') {\r\n      troopsCode = wrappedCode(paramCode, troopsStartIndex, '{', '}');\r\n      break;\r\n    }\r\n  }\r\n\r\n  return {\r\n    optionsConfig: JSON.parse(optionsConfigCode),\r\n    troops: JSON.parse(troopsCode)\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * @param {string} jsCode\r\n * @return {string}\r\n */\r\nfunction findVillageCode(jsCode) {\r\n  let search = 'var village = ';\r\n  let startIndex = jsCode.indexOf(search) + search.length;\r\n  return wrappedCode(jsCode, startIndex, '{', '}');\r\n}\r\n\r\n\r\n/**\r\n * @param {string} string\r\n * @param {number} firstParenIndex\r\n * @param {string} openingChar\r\n * @param {string} closingChar\r\n * @return {string}\r\n */\r\nfunction wrappedCode(string, firstParenIndex, openingChar = '(', closingChar = ')') {\r\n  let openingParens = 1;\r\n  let closingParens = 0;\r\n  let lastParenIndex = -1;\r\n\r\n  for (let i = firstParenIndex + 1; i < string.length; i++) {\r\n    let char = string[i];\r\n    if (char === openingChar) {\r\n      openingParens++;\r\n    }\r\n    if (char === closingChar) {\r\n      closingParens++;\r\n      lastParenIndex = i;\r\n    }\r\n    if (closingParens === openingParens) {\r\n      return string.substring(firstParenIndex, lastParenIndex + 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/Models/ScavengeTroopsAssignerPreferences.js\n\r\n\r\n\r\nclass ScavengeTroopsAssignerPreferences_ScavengeTroopsAssignerPreferences {\r\n\r\n  constructor(sendableTroopTypes) {\r\n    this._sendableTroopTypes = sendableTroopTypes;\r\n    this.reset();\r\n  }\r\n\r\n  reset() {\r\n    this.mode = ScavengeTroopsAssignerPreferences_ScavengeTroopsAssignerPreferences.MODE_SANE_PERSON;\r\n    this.allowedOptionIds = new Set([1, 2, 3, 4]);\r\n    this.targetDurationSeconds = 2 * 3600;\r\n    this.initTroops();\r\n    this.troopOrder = [\r\n      ['axe', 'light', 'marcher'], // first chunk (sent together)\r\n      ['spear', 'sword', 'archer'], // second chunk (sent together)\r\n      ['heavy'], // third chunk\r\n      ['knight']\r\n    ];\r\n  }\r\n\r\n  initTroops() {\r\n    this.troops = {};\r\n    for (let troopType of this._sendableTroopTypes) {\r\n      this.troops[troopType] = {\r\n        maySend: true,\r\n        reserved: 0\r\n      };\r\n    }\r\n  }\r\n\r\n  setMode(mode) {\r\n    this.mode = mode;\r\n    $(this).trigger('change');\r\n  }\r\n\r\n  isOptionAllowed(optionId) {\r\n    return this.allowedOptionIds.has(optionId);\r\n  }\r\n\r\n  setOptionAllowed(optionId, isAllowed = true) {\r\n    if (isAllowed) {\r\n      this.allowedOptionIds.add(optionId);\r\n    } else {\r\n      this.allowedOptionIds.delete(optionId);\r\n    }\r\n    $(this).trigger('change');\r\n  }\r\n\r\n  setTargetDuration(seconds) {\r\n    this.targetDurationSeconds = seconds;\r\n    $(this).trigger('change');\r\n  }\r\n\r\n  /**\r\n   * @return {string[]}\r\n   */\r\n  getAllowedTroopTypes() {\r\n    return this._sendableTroopTypes.filter(troopType => this.troops[troopType].maySend);\r\n  }\r\n\r\n  isTroopTypeAllowed(troopType) {\r\n    return this.troops[troopType].maySend;\r\n  }\r\n\r\n  setTroopAllowed(troopType, isAllowed) {\r\n    this.troops[troopType].maySend = isAllowed;\r\n    $(this).trigger('change');\r\n  }\r\n\r\n  /**\r\n   * @return TroopCounts\r\n   */\r\n  getReservedTroopCounts() {\r\n    let troopCounts = new TroopCounts();\r\n    for (let troopType of this._sendableTroopTypes) {\r\n      troopCounts[troopType] = this.troops[troopType].reserved;\r\n    }\r\n    return troopCounts;\r\n  }\r\n\r\n  getReservedCount(troopType) {\r\n    return this.troops[troopType].reserved;\r\n  }\r\n\r\n  setReservedCount(troopType, count) {\r\n    this.troops[troopType].reserved = count;\r\n    $(this).trigger('change');\r\n  }\r\n\r\n  setTroopOrder(troopOrder) {\r\n    this.troopOrder = troopOrder;\r\n    $(this).trigger('change');\r\n  }\r\n\r\n  export() {\r\n    return {\r\n      mode: this.mode,\r\n      allowedOptionIds: [...this.allowedOptionIds.values()],\r\n      targetDurationSeconds: this.targetDurationSeconds,\r\n      troops: this.troops,\r\n      troopOrder: this.troopOrder\r\n    }\r\n  }\r\n\r\n  import(exported) {\r\n    this.mode = exported.mode;\r\n    this.allowedOptionIds = new Set(exported.allowedOptionIds);\r\n    this.targetDurationSeconds = exported.targetDurationSeconds;\r\n    this.troops = exported.troops;\r\n    this.troopOrder = exported.troopOrder;\r\n  }\r\n\r\n}\r\n\r\nScavengeTroopsAssignerPreferences_ScavengeTroopsAssignerPreferences.MODE_SANE_PERSON = 'sane_person';\r\nScavengeTroopsAssignerPreferences_ScavengeTroopsAssignerPreferences.MODE_ADDICT = 'addict';\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/Models/ScavengeTroopsAssigner.js\n\r\n\r\n\r\nclass ScavengeTroopsAssigner_ScavengeTroopsAssigner {\r\n\r\n  /**\r\n   * @param {Map<number, ScavengeOption>} options\r\n   * @param {string[]} sendableTroopsTypes\r\n   * @param troopUtil\r\n   */\r\n  constructor(options, sendableTroopTypes, troopUtil) {\r\n    this.options = options;\r\n    this.sendableTroopTypes = sendableTroopTypes;\r\n    this.troopUtil = troopUtil;\r\n    this.preferences = new ScavengeTroopsAssignerPreferences_ScavengeTroopsAssignerPreferences(sendableTroopTypes);\r\n  }\r\n\r\n  /**\r\n   * @return TroopCounts\r\n   */\r\n  adjustAvailableTroopCounts(availableTroopCounts) {\r\n    return availableTroopCounts\r\n      .filter(this.preferences.getAllowedTroopTypes())\r\n      .subtract(this.preferences.getReservedTroopCounts())\r\n      .zeroNegatives();\r\n  }\r\n\r\n  /**\r\n   * @param {int[]} usableOptionIds\r\n   */\r\n  adjustUsableOptionIds(usableOptionIds) {\r\n    return usableOptionIds.filter(optionId => this.preferences.isOptionAllowed(optionId));\r\n  }\r\n\r\n  /**\r\n   * @param {TroopCounts} availableTroopCounts\r\n   */\r\n  areTroopsSufficient(availableTroopCounts) {\r\n    availableTroopCounts = this.adjustAvailableTroopCounts(availableTroopCounts);\r\n    return availableTroopCounts.populationUsed() >= 10;\r\n  }\r\n\r\n  /**\r\n   * @param {int[]} usableOptionIds\r\n   * @param {TroopCounts} availableTroopCounts\r\n   * @param {float} haulFactor\r\n   */\r\n  assignTroops(usableOptionIds, availableTroopCounts, haulFactor = 1.0) {\r\n    usableOptionIds = this.adjustUsableOptionIds(usableOptionIds);\r\n    availableTroopCounts = this.adjustAvailableTroopCounts(availableTroopCounts);\r\n\r\n    if (this.preferences.mode === ScavengeTroopsAssignerPreferences_ScavengeTroopsAssignerPreferences.MODE_ADDICT) {\r\n      return this.assignTroopsForAddict(usableOptionIds, availableTroopCounts, haulFactor);\r\n    }\r\n    return this.assignTroopsForSanePerson(usableOptionIds, availableTroopCounts, haulFactor);\r\n  }\r\n\r\n  /**\r\n   * @param {number[]} usableOptionIds\r\n   * @param {TroopCounts} availableTroopCounts\r\n   * @param {float} haulFactor\r\n   * @return {Map<number, TroopCounts>}\r\n   */\r\n  assignTroopsForSanePerson(usableOptionIds, availableTroopCounts, haulFactor = 1.0) {\r\n    let assignedCountsByOption = new Map();\r\n    let optionIds = [...this.options.keys()].reverse();\r\n\r\n    for (let optionId of optionIds) {\r\n      let assignedCounts;\r\n      if (usableOptionIds.includes(optionId)) {\r\n        let option = this.options.get(optionId);\r\n        let targetCapacity = option.calcTargetCapacity(this.preferences.targetDurationSeconds);\r\n        assignedCounts = this.chunkTroopsToHaul(targetCapacity, availableTroopCounts, haulFactor);\r\n      } else {\r\n        assignedCounts = new TroopCounts();\r\n      }\r\n      assignedCountsByOption.set(optionId, assignedCounts);\r\n      availableTroopCounts = availableTroopCounts.subtract(assignedCounts);\r\n    }\r\n\r\n    return assignedCountsByOption;\r\n  }\r\n\r\n  /**\r\n   * @param {number[]} usableOptionIds\r\n   * @param {TroopCounts} availableTroopCounts\r\n   * @param {float} haulFactor\r\n   * @return {Map<number, TroopCounts>}\r\n   */\r\n  assignTroopsForAddict(usableOptionIds, availableTroopCounts, haulFactor = 1.0) {\r\n    let assignedCountsByOption = new Map();\r\n    let optionIds = [...this.options.keys()].reverse();\r\n\r\n    let availableCapacity = availableTroopCounts.carryCapacity() * haulFactor;\r\n    let targetDurationSeconds = this.preferences.targetDurationSeconds;\r\n\r\n    let targetCapacitySum = 0;\r\n    let inverseLootFactors = {};\r\n    let inverseLootFactorSum = 0;\r\n\r\n    for (let optionId of optionIds) {\r\n      if (!usableOptionIds.includes(optionId)) {\r\n        continue;\r\n      }\r\n      let option = this.options.get(optionId);\r\n      inverseLootFactors[optionId] = 1 / option.getLootFactor()\r\n      inverseLootFactorSum += inverseLootFactors[optionId];\r\n      targetCapacitySum += option.calcTargetCapacity(targetDurationSeconds);\r\n    }\r\n\r\n    let portionAvailableTroopsOverall = Math.min(1, targetCapacitySum / availableCapacity);\r\n\r\n    for (let optionId of optionIds) {\r\n      let assignedCounts;\r\n      if (usableOptionIds.includes(optionId)) {\r\n        let portionOfOptionFactors = inverseLootFactors[optionId] / inverseLootFactorSum;\r\n        let portionAvailableTroopsForOption = portionAvailableTroopsOverall * portionOfOptionFactors;\r\n        let targetCapacity = portionAvailableTroopsForOption * availableCapacity;\r\n        assignedCounts = this.chunkTroopsToHaul(targetCapacity, availableTroopCounts, haulFactor);\r\n      } else {\r\n        assignedCounts = new TroopCounts();\r\n      }\r\n      assignedCountsByOption.set(optionId, assignedCounts);\r\n      availableTroopCounts = availableTroopCounts.subtract(assignedCounts);\r\n    }\r\n\r\n    return assignedCountsByOption;\r\n  }\r\n\r\n  chunkTroopsToHaul(targetCapacity, availableTroopCounts, haulFactor = 1.0) {\r\n    let assignedTroopCounts = new TroopCounts();\r\n    let capacities = {};\r\n    for (let chunk of this.preferences.troopOrder) {\r\n      if (targetCapacity < 0) {\r\n        break;\r\n      }\r\n\r\n      let availableCapacity = 0;\r\n      for (let troopType of chunk) {\r\n        let troopCount = availableTroopCounts[troopType];\r\n        capacities[troopType] = this.troopUtil.carryCapacity(troopType, haulFactor);\r\n        availableCapacity += troopCount * capacities[troopType];\r\n      }\r\n      let chunkRatio = Math.min(1, targetCapacity / availableCapacity);\r\n\r\n      for (let troopType of chunk) {\r\n        let troopCount = availableTroopCounts[troopType];\r\n        assignedTroopCounts[troopType] = Math.floor(troopCount * chunkRatio);\r\n        targetCapacity -= assignedTroopCounts[troopType] * capacities[troopType];\r\n      }\r\n\r\n      if (targetCapacity > 0) {\r\n        this.troopsToTopOff(targetCapacity, availableTroopCounts, assignedTroopCounts, chunk, capacities)\r\n          .each(function (troopType, count) {\r\n            targetCapacity -= count * (capacities[troopType] || 0);\r\n            assignedTroopCounts[troopType] += count;\r\n          });\r\n      }\r\n\r\n    }\r\n    return assignedTroopCounts;\r\n  }\r\n\r\n  /**\r\n   * @param {int} targetCapacity\r\n   * @param {TroopCounts} availableTroopCounts\r\n   * @param {TroopCounts} assignedTroopCounts\r\n   * @param {string[]} troopTypes\r\n   * @return {TroopCounts}\r\n   */\r\n  troopsToTopOff(targetCapacity, availableTroopCounts, assignedTroopCounts, troopTypes, capacities) {\r\n    let extraCounts = new TroopCounts();\r\n\r\n    while (targetCapacity > 0) {\r\n      let unassignedExists = false;\r\n      let closestType = null;\r\n      let smallestDiff = Number.MAX_SAFE_INTEGER;\r\n\r\n      for (let troopType of troopTypes) {\r\n        if (availableTroopCounts[troopType] > assignedTroopCounts[troopType] + extraCounts[troopType]) {\r\n          unassignedExists = true;\r\n\r\n          let diff = Math.abs(targetCapacity - capacities[troopType]);\r\n          if (diff < smallestDiff) {\r\n            smallestDiff = diff;\r\n            closestType = troopType;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (!unassignedExists) {\r\n        break;\r\n      }\r\n\r\n      if (targetCapacity < Math.abs(targetCapacity - capacities[closestType])) {\r\n        // adding more troops would put us farther from the target than we already are\r\n        break;\r\n      }\r\n      extraCounts[closestType] += 1;\r\n      targetCapacity -= capacities[closestType];\r\n    }\r\n\r\n    return extraCounts;\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/Widget/AbstractWidget.js\nfunction afterDOMInsert(el, callback) {\r\n  let observer = new MutationObserver((mutations) => {\r\n    outerloop:\r\n      for (let mutation of mutations) {\r\n        for (let node of mutation.addedNodes) {\r\n          if (node === el || node.contains(el)) {\r\n            setTimeout(callback, 0);\r\n            observer.disconnect();\r\n            break outerloop;\r\n          }\r\n        }\r\n      }\r\n  });\r\n\r\n  observer.observe(document, {\r\n    attributes: true,\r\n    childList: true,\r\n    subtree: true\r\n  });\r\n}\r\n\r\n\r\nclass AbstractWidget {\r\n\r\n  insertBefore(el) {\r\n    this._beforeInsert();\r\n    $(el).before(this.$el);\r\n    return this;\r\n  }\r\n\r\n  insertAfter(el) {\r\n    this._beforeInsert();\r\n    $(el).after(this.$el);\r\n    return this;\r\n  }\r\n\r\n  appendTo(el) {\r\n    this._beforeInsert();\r\n    $(el).append(this.$el);\r\n    return this;\r\n  }\r\n\r\n  _beforeInsert() {\r\n    if (typeof this.afterInsert !== 'function') {\r\n      return;\r\n    }\r\n    let el = this.$el[0];\r\n    afterDOMInsert(el, () => this.afterInsert());\r\n  }\r\n\r\n}\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/Widget/ScavengePreferencesWidget.js\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass ScavengePreferencesWidget_ScavengePreferencesWidget extends AbstractWidget {\r\n\r\n  /**\r\n   * @param {ScavengeTroopsAssignerPreferences} preferences\r\n   * @param {Map<ScavengeOption>} scavengeOptions\r\n   * @param {string[]} sendableTroopTypes\r\n   */\r\n  constructor(preferences, scavengeOptions, sendableTroopTypes) {\r\n    super();\r\n    this.preferences = preferences;\r\n    this.scavengeOptions = scavengeOptions;\r\n    this.sendableTroopTypes = sendableTroopTypes;\r\n    this.initStructure();\r\n    this.initTroopOrder();\r\n    this.watchSelf();\r\n  }\r\n\r\n  initStructure() {\r\n    this.$el = $(this.createHtml().trim());\r\n    this.$targetDuration = this.$el.find('.target-duration');\r\n    this.$options = this.$el.find('.options-section input');\r\n    this.$modes = this.$el.find(`input[name='mode']`);\r\n    this.$troopsAllowed = this.$el.find('.troop-allowed');\r\n    this.$troopsReserved = this.$el.find('.troop-reserved');\r\n    this.$troopGroups = this.$el.find('.troop-group');\r\n  }\r\n\r\n  createHtml() {\r\n    return `<div class=\"twcheese-scavenge-preferences-widget\">\r\n            <h3>Preferences</h3>\r\n            ${this.createTimingSectionHtml()}\r\n            <br/>\r\n            ${this.createOptionsSectionHtml()}\r\n            <br/>\r\n            <table style=\"width: 100%;\">\r\n                <tr>\r\n                    <td>${this.createTroopsSectionHtml()}</td>\r\n                    <td style=\"width: 20px;\"></td>\r\n                    <td>${this.createTroopsOrderSectionHtml()}</td>\r\n                </tr>\r\n            </table>\r\n        </div>`;\r\n  }\r\n\r\n  createTimingSectionHtml() {\r\n    let overallSeconds = this.preferences.targetDurationSeconds;\r\n    let hours = Math.floor(overallSeconds / 3600);\r\n    let minutes = String(Math.floor(overallSeconds / 60) % 60).padStart(2, '0');\r\n    let durationPattern = \"\\\\d+:\\\\d{2}\";\r\n\r\n    let mode = this.preferences.mode;\r\n    let modeSane = ScavengeTroopsAssignerPreferences_ScavengeTroopsAssignerPreferences.MODE_SANE_PERSON;\r\n    let modeAddict = ScavengeTroopsAssignerPreferences_ScavengeTroopsAssignerPreferences.MODE_ADDICT;\r\n    let checkSane = (mode === modeSane) ? 'checked' : '';\r\n    let checkAddict = (mode === modeAddict) ? 'checked' : '';\r\n\r\n    return `\r\n            <table class=\"vis timing-section\">\r\n                <tr><th>Timing</th></tr>\r\n                <tr>\r\n                    <td>\r\n                        Target duration:\r\n                        <input type=\"text\" class=\"target-duration\" value=\"${hours}:${minutes}\" placeholder=\"2:00\" required pattern=\"${durationPattern}\">\r\n                        hours:minutes\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <label>\r\n                            <input type=\"radio\" name=\"mode\" value=\"${modeSane}\" ${checkSane}>\r\n                            Max-out duration of best options first.\r\n                            <br/><span class=\"hint\">(recommended if you'll be afk)</span>\r\n                        </label>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <label>\r\n                            <input type=\"radio\" name=\"mode\" value=\"${modeAddict}\" ${checkAddict}>\r\n                            Aim for same duration across all options.\r\n                            <br/><span class=\"hint\">(recommended if you can immediately resend whenever)</span>\r\n                        </label>    \r\n                    </td>\r\n                </tr>\r\n            </table>\r\n        `;\r\n  }\r\n\r\n  createOptionsSectionHtml() {\r\n    let optionsArr = [...this.scavengeOptions.values()];\r\n\r\n    return `\r\n            <table class=\"vis options-section\">\r\n                <tr><th colspan=\"2\">Options to use</th></tr>\r\n                ${optionsArr.map(option => this.createOptionRowHtml(option)).join('')}\r\n            </table>\r\n        `;\r\n  }\r\n\r\n  createOptionRowHtml(option) {\r\n    let checked = '';\r\n    if (this.preferences.isOptionAllowed(option.id)) {\r\n      checked = 'checked';\r\n    }\r\n\r\n    return `<tr>\r\n            <td>\r\n                <label>\r\n                    <input type=\"checkbox\" ${checked} data-option-id=\"${option.id}\">\r\n                    <img src=\"${ImageSrc.scavengeOption(option.id)}\">\r\n                    <span>${option.getName()}</span>\r\n                </label>\r\n            </td>\r\n            <td>(${option.getLootPercent()}% carry capacity)</td>\r\n        </tr>`;\r\n  }\r\n\r\n  createTroopsSectionHtml() {\r\n    let helpTooltip = [\r\n      `Reserved troops won't be sent scavenging.`,\r\n      `<br/>`,\r\n      `<br/>Example:`,\r\n      ` :: You have 500 spears and 100 are reserved. At most, 400 spears would be sent scavenging.`\r\n    ].join('');\r\n\r\n    return `\r\n            <table class=\"vis troops-section\">\r\n                <tr>\r\n                    <th>Use</th>\r\n                    <th>Reserved <img src=\"${ImageSrc.info}\" title=\"${helpTooltip}\" class=\"tooltip info\"></th>\r\n                </tr>\r\n                ${this.sendableTroopTypes.map(type => this.createTroopRowHtml(type)).join('')}\r\n            </table>\r\n        `;\r\n  }\r\n\r\n  createTroopRowHtml(troopType) {\r\n    let checked = this.preferences.isTroopTypeAllowed(troopType) ? 'checked' : '';\r\n    let reservedCount = this.preferences.getReservedCount(troopType);\r\n\r\n    return `<tr>\r\n            <td>\r\n                <input class=\"troop-allowed\" type=\"checkbox\" value=\"${troopType}\" ${checked}>\r\n                <img src=\"${ImageSrc.troopIcon(troopType)}\">\r\n            </td>\r\n            <td><input class=\"troop-reserved\" data-troop-type=\"${troopType}\" type=\"number\" min=\"0\" value=\"${reservedCount}\"></td>\r\n        </tr>`;\r\n  }\r\n\r\n  createTroopsOrderSectionHtml() {\r\n    let helpTooltip = [\r\n      `Troops in upper groups will be sent before troops in lower groups.`,\r\n      `<br/>`,\r\n      `<br/>Troops within the same group will be split proportionally by count available.`\r\n    ].join('');\r\n\r\n    return `\r\n            <table class=\"vis troop-order-section\">\r\n                <tr>\r\n                    <th>Order <img src=\"${ImageSrc.info}\" title=\"${helpTooltip}\" class=\"tooltip info\"></th>\r\n                </tr>\r\n                ${this.sendableTroopTypes.map(() => '<tr><td><div class=\"troop-group\"></div></td></tr>').join('')}\r\n            </table>\r\n        `;\r\n  }\r\n\r\n  initTroopOrder() {\r\n    for (let [i, chunk] of Object.entries(this.preferences.troopOrder)) {\r\n      let $group = this.$troopGroups.eq(i);\r\n      for (let troopType of chunk) {\r\n        if (!Troops_troopUtil.existsOnWorld(troopType)) { // todo: this is dirty. the preferences shouldn't be initialized with invalid troop types\r\n          continue;\r\n        }\r\n        let $troopType = $(`<img class=\"troop\" draggable=\"true\" data-troop-type=\"${troopType}\" src=\"${ImageSrc.troopIcon(troopType)}\">`);\r\n        $group.append($troopType);\r\n      }\r\n    }\r\n\r\n    let $draggingTroop;\r\n\r\n    this.$troopGroups\r\n      .on('dragover', function (e) {\r\n        e.preventDefault(); // allows dropping\r\n      })\r\n      .on('dragenter', function (e) {\r\n        $(this).addClass('dragging-over');\r\n      })\r\n      .on('dragleave', function (e) {\r\n        $(this).removeClass('dragging-over');\r\n      })\r\n      .on('drop', function (e) {\r\n        e.preventDefault();\r\n        $(this).append($draggingTroop);\r\n        $(this).removeClass('dragging-over');\r\n        updateTroopOrderPreferences();\r\n      });\r\n\r\n    this.$troopGroups.find('.troop')\r\n      .on('dragstart', function (e) {\r\n        let dt = e.originalEvent.dataTransfer;\r\n        $draggingTroop = $(this);\r\n        dt.setDragImage($draggingTroop.clone()[0], 0, 0);\r\n        dt.dropEffect = 'move';\r\n        $draggingTroop.addClass('dragging');\r\n      })\r\n      .on('dragend', function (e) {\r\n        $draggingTroop.removeClass('dragging');\r\n        $draggingTroop = null;\r\n      });\r\n\r\n    let updateTroopOrderPreferences = () => {\r\n      let order = determineTroopOrder();\r\n      this.preferences.setTroopOrder(order);\r\n    }\r\n\r\n    let determineTroopOrder = () => {\r\n      let chunks = [];\r\n      this.$troopGroups.each(function () {\r\n        let $group = $(this);\r\n        let $troops = $group.find('.troop');\r\n        if ($troops.length < 1) {\r\n          return;\r\n        }\r\n        let chunk = [];\r\n        $troops.each(function () {\r\n          chunk.push($(this).data('troopType'));\r\n        });\r\n        chunks.push(chunk);\r\n      });\r\n      return chunks;\r\n    }\r\n  }\r\n\r\n  watchSelf() {\r\n    let prefs = this.preferences;\r\n\r\n    this.$targetDuration.on('change', function () {\r\n      if (!this.checkValidity()) {\r\n        return;\r\n      }\r\n      let [, hours, minutes] = this.value.match(/(\\d+):(\\d+)/);\r\n\r\n      let durationSeconds = parseInt(hours) * 3600 + parseInt(minutes) * 60;\r\n      if (durationSeconds < 3600) {\r\n        this.setCustomValidity('must be at least 1 hour');\r\n        return;\r\n      } else {\r\n        this.setCustomValidity('');\r\n      }\r\n\r\n      prefs.setTargetDuration(durationSeconds);\r\n    });\r\n\r\n    this.$options.on('change', function () {\r\n      let $option = $(this);\r\n      prefs.setOptionAllowed($option.data('optionId'), $option.prop('checked'));\r\n    });\r\n\r\n    this.$modes.on('change', () => {\r\n      let mode = this.$modes.filter(':checked').val();\r\n      prefs.setMode(mode);\r\n    });\r\n\r\n    this.$troopsAllowed.on('change', function () {\r\n      let $this = $(this);\r\n      prefs.setTroopAllowed($this.val(), $this.prop('checked'));\r\n    });\r\n\r\n    this.$troopsReserved.on('input', function () {\r\n      if (!this.checkValidity()) {\r\n        return;\r\n      }\r\n      let count = parseInt(this.value) || 0;\r\n      prefs.setReservedCount(this.dataset.troopType, count);\r\n    });\r\n  }\r\n\r\n}\r\n\r\n\r\ninitCss(`\r\n\r\n    .twcheese-scavenge-preferences-widget .options-section,\r\n    .twcheese-scavenge-preferences-widget .timing-section,\r\n    .twcheese-scavenge-preferences-widget .troops-section,\r\n    .twcheese-scavenge-preferences-widget .troop-order-section {\r\n        width: 100%;\r\n    }\r\n\r\n    \r\n    .twcheese-scavenge-preferences-widget .info {\r\n        width: 14px;\r\n        height: 14px;\r\n        vertical-align: middle;\r\n        position: relative;\r\n        top: -1px;\r\n    }\r\n\r\n    .twcheese-scavenge-preferences-widget .target-duration {\r\n        width: 50px;\r\n    }\r\n\r\n    .twcheese-scavenge-preferences-widget .timing-section .hint {\r\n        font-size: x-small;\r\n        margin-left: 25px;\r\n    }\r\n\r\n    .twcheese-scavenge-preferences-widget .timing-section input[type='radio'] {\r\n        vertical-align: middle;\r\n    }\r\n\r\n    .twcheese-scavenge-preferences-widget .options-section td {\r\n        height: 22px;\r\n    }\r\n\r\n    .twcheese-scavenge-preferences-widget .options-section input,\r\n    .twcheese-scavenge-preferences-widget .options-section span {\r\n        vertical-align: middle;\r\n    }\r\n\r\n    .twcheese-scavenge-preferences-widget .options-section img {\r\n        vertical-align: middle;\r\n        width: 18px;\r\n        height: 18px;\r\n    }\r\n\r\n    .twcheese-scavenge-preferences-widget .troops-section td,\r\n    .twcheese-scavenge-preferences-widget .troop-order-section td {\r\n        height: 26px;\r\n    }\r\n\r\n    .twcheese-scavenge-preferences-widget .troops-section td:first-child {\r\n        width: 45px;\r\n    }   \r\n\r\n    .twcheese-scavenge-preferences-widget .troops-section img,\r\n    .twcheese-scavenge-preferences-widget .troops-section input {\r\n        vertical-align: middle;\r\n    }\r\n\r\n    .twcheese-scavenge-preferences-widget .troop-reserved {\r\n        width: 70px;\r\n    }\r\n\r\n    .twcheese-scavenge-preferences-widget .troop-group {\r\n        position: relative;\r\n        border: 1px solid black;\r\n        border-radius: 3px;\r\n        height: 18px;\r\n        width: 176px;\r\n        padding: 3px;\r\n    }\r\n\r\n    .twcheese-scavenge-preferences-widget .troop-group.dragging-over {\r\n        background-color: darkOrange;\r\n    }\r\n\r\n    .twcheese-scavenge-preferences-widget .troop {\r\n        display: inline-block;\r\n        width: 18px;\r\n        height: 18px;\r\n        cursor: move;\r\n        margin: 0 3px;\r\n        -webkit-user-select: none;\r\n        -moz-user-select: none;\r\n        -ms-user-select: none;\r\n        user-select: none;\r\n    }\r\n\r\n    .twcheese-scavenge-preferences-widget .troop.dragging {\r\n        opacity: 0.1;\r\n    }\r\n    \r\n`);\r\n\r\n\r\n\n// EXTERNAL MODULE: ./src/Models/Debug/Build/ProcessFactory.js\nvar ProcessFactory = __webpack_require__(3);\n\n// CONCATENATED MODULE: ./dist/tool/cfg/debug/ASS/Default.js\nlet processCfg = { phases: [{\"type\":\"PhaseQuestion\",\"internalName\":\"Entry\",\"questions\":[{\"type\":\"QuestionFreeForm\",\"ask\":\"What's broken?\",\"placeholderText\":\"e.g. \\\"it doesn't focus the Start button\\\"\",\"minResponseLength\":10}]}] };\r\n\r\n\n// CONCATENATED MODULE: ./src/ToolSetup/ASS.js\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet initialized = false;\r\nlet ASS_haulFactor, troopsAssigner, scavengeOptions;\r\n\r\nasync function useTool() {\r\n  if (!atScavengeScreen()) {\r\n    suggestRedirectToScavengeScreen();\r\n    return;\r\n  }\r\n\r\n  if (!initialized) {\r\n    await init();\r\n    initialized = true;\r\n  }\r\n\r\n  prepareBestOption();\r\n}\r\n\r\n\r\nasync function init() {\r\n  await ensureRemoteConfigsUpdated();\r\n\r\n  let models = scrapeScavengeModels(document);\r\n  troopsAssigner = new ScavengeTroopsAssigner_ScavengeTroopsAssigner(models.options, models.sendableTroopTypes, Troops_troopUtil);\r\n  ASS_haulFactor = models.haulFactor;\r\n\r\n  let exportedPreferences = userConfig.get('ASS.troopsAssigner');\r\n  if (exportedPreferences) {\r\n    troopsAssigner.preferences.import(exportedPreferences);\r\n  }\r\n  $(troopsAssigner.preferences).on('change', function () {\r\n    userConfig.set('ASS.troopsAssigner', troopsAssigner.preferences.export());\r\n  });\r\n  scavengeOptions = models.options;\r\n  insertPreferencesLauncher();\r\n\r\n  insertNarcissism();\r\n\r\n  initCss(`\r\n        .free_send_button:focus {\r\n            color: yellow;\r\n            box-shadow: 0 0 5px 3px yellow;\r\n        }\r\n    `);\r\n\r\n  afterScavengingStarted(() => prepareBestOption(false));\r\n}\r\n\r\n\r\nfunction atScavengeScreen() {\r\n  let here = document.location.href;\r\n  return here.includes('screen=place') && here.includes('mode=scavenge');\r\n}\r\n\r\n\r\nfunction suggestRedirectToScavengeScreen() {\r\n  suggestRedirect({\r\n    message: 'To use this, you must be at the scavenging screen.',\r\n    screen: 'place',\r\n    screenName: 'Scavenging Screen',\r\n    uriParams: {\r\n      mode: 'scavenge'\r\n    },\r\n    skippableId: 'Tool:ASS'\r\n  });\r\n}\r\n\r\n\r\nfunction insertPreferencesLauncher() {\r\n  let $launcher = $(`<a href=\"#\">&raquo; preferences</a>`)\r\n    .css({\r\n      fontSize: 'small',\r\n      marginLeft: '10px'\r\n    })\r\n    .on('click', function (e) {\r\n      e.preventDefault();\r\n      openPreferencesPopup();\r\n    });\r\n\r\n  $('#content_value').find('h3').eq(0).append($launcher);\r\n}\r\n\r\n\r\nfunction insertNarcissism() {\r\n  let $narcissism = $(`<span>Script created by <a href=\"https://forum.tribalwars.net/index.php?members/28484\">cheesasaurus</a> ` +\r\n    `and maintained by <a target=\"_blank\" href=\"https://www.github.com/Jopika\">Jopika</a></span>`)\r\n    .css({\r\n      float: 'right',\r\n      fontSize: 'xx-small',\r\n      fontWeight: 'normal'\r\n    });\r\n\r\n  $('#content_value').find('h3').eq(0).append($narcissism);\r\n}\r\n\r\n\r\nfunction openPreferencesPopup() {\r\n  let onClose = prepareBestOption;\r\n\r\n  Dialog.show('twcheese-scavenge-preferences-popup', function ($container) {\r\n    let widget = new ScavengePreferencesWidget_ScavengePreferencesWidget(troopsAssigner.preferences, scavengeOptions, troopsAssigner.sendableTroopTypes);\r\n    widget.appendTo($container);\r\n  }, onClose);\r\n}\r\n\r\n\r\nfunction prepareBestOption(informUserOfIssues = true) {\r\n  let usableOptionIds = scrapeUsableOptionIds(document);\r\n  usableOptionIds = troopsAssigner.adjustUsableOptionIds(usableOptionIds);\r\n  if (usableOptionIds.length < 1) {\r\n    if (informUserOfIssues) {\r\n      window.UI.ErrorMessage(`Can't scavenge right now because there's no usable options`);\r\n    }\r\n    return;\r\n  }\r\n\r\n  let availableTroops = scrapeAvailableTroopCounts(document);\r\n  if (!troopsAssigner.areTroopsSufficient(availableTroops)) {\r\n    if (informUserOfIssues) {\r\n      window.UI.ErrorMessage(`Not enough troops available to scavenge right now`);\r\n    }\r\n    return;\r\n  }\r\n\r\n  let assignedTroopsByOption = troopsAssigner.assignTroops(usableOptionIds, availableTroops, ASS_haulFactor);\r\n\r\n  let optionId = usableOptionIds[usableOptionIds.length - 1];\r\n  fillTroops(assignedTroopsByOption.get(optionId));\r\n  focusStartButton(optionId);\r\n}\r\n\r\n\r\nfunction focusStartButton(optionId) {\r\n  $('.free_send_button')[optionId - 1].focus();\r\n}\r\n\r\n\r\nfunction fillTroops(troopCounts) {\r\n  troopCounts.each(function (troopType, count) {\r\n    $(`.unitsInput[name='${troopType}']`)\r\n      .val(count)\r\n      .trigger('change');\r\n  });\r\n}\r\n\r\n\r\nfunction afterScavengingStarted(doSomething) {\r\n  let observer = new MutationObserver(function (mutations) {\r\n    mutations.forEach(function (mutation) {\r\n      let didScavengingStart = $(mutation.addedNodes).is('.active-view');\r\n      if (didScavengingStart) {\r\n        doSomething();\r\n      }\r\n    });\r\n  });\r\n\r\n  $('.scavenge-option').each(function () {\r\n    observer.observe(this, {\r\n      childList: true,\r\n      subtree: true\r\n    });\r\n  });\r\n}\r\n\r\n\r\n// register tool ///////////////////////////////////////////////////////\r\n\r\nlet processFactory = new ProcessFactory[\"a\" /* ProcessFactory */]({});\r\n\r\nfunction newDebugProcess() {\r\n  let name = 'Tool: Another Scavenging Script';\r\n  return processFactory.create(name, processCfg, true);\r\n}\r\n\r\n\r\nwindow.TwCheese.registerTool({\r\n  id: 'ASS',\r\n  use: useTool,\r\n  getDebugProcess: newDebugProcess\r\n});\r\n\n\n/***/ })\n/******/ ]);"]}